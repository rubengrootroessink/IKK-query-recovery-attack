FROM: Chris Schilling <ch...@cellixis.com>
SUBJECT: Re: Indexing with weights
DATE: 24 Jan 2011

Well, maybe this trick is better?

while(parseFile) {
	String keyword = ...;
	String score = ...;
	doc.add(new Field("keywords", keyword, Field.Store.NO, Field.Index.ANALYZED));
	doc.add(new NumericField(keyword).setAsDouble(score));
}

Then, I guess I can sort based on the value of the field corresponding to the keyword that
I search for.  

Ill run with this for now to see if it works.

Thanks
C

On Jan 24, 2011, at 1:16 PM, Erick Erickson wrote:

> I think all you need to do is index the keywords in one field and weights in
> another.
> Then just search on keywords and sort on weight.
> 
> Note: the field you sort on should NOT be tokenized.
> 
> Best
> Erick
> 
> On Mon, Jan 24, 2011 at 4:02 PM, Chris Schilling <chris@cellixis.com> wrote:
> 
>> Hello,
>> 
>> I have a bunch of text documents formatted like so:
>> 
>> keyword1 wt1
>> keyword2 wt2
>> keyword3 wt3
>> 
>> I would like to index the documents based on the keywords.  When I retrieve
>> (search) for a keyword, I would like the list of documents to be sorted by
>> the weight for that keyword.   Is there an example anywhere of how to do
>> this.  I own LIA, but have not made it through the entire book yet.
>> Apologies if this is addressed.
>> 
>> Thank you!
>> Chris S.
>> 
>> 
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>> For additional commands, e-mail: java-user-help@lucene.apache.org
>> 
>> 


