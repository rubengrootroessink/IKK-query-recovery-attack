FROM: "Mark Miller" <markrmil...@gmail.com>
SUBJECT: Re: thread safe shared IndexSearcher
DATE: 19 Sep 2007

I use option 3 extensivley and find it very effective. There is a tweak or
two required to get it to work right with MultiSearchers, but other than
that, the code is great. I have built a lot on top of it. I'm on the list
all the time and would be happy to answer any questions you have in regards
to LuceneIndexAccessor. Frankly, I think its overlooked far too much.

- Mark


On 9/19/07, Jay Yu <yu@ai.sri.com> wrote:
>
>
> In a multithread app like web app, a shared IndexSearcher could throw a
> AlreadyClosedException when another thread is trying to update the
> underlying IndexReader by closing the shared searcher after the index is
> updated. Searching over the past discussions on this mailing list, I
> found several approaches to solve the problem.
> 1. use solr
> 2. use DelayCloseIndexSearcher
> 3. use LuceneIndexAccessor
>
>
> the first one is not feasible for us; some people seemed to have
> problems with No. 2 and I do not find a lot of discussions around No.3.
>
> I wonder if anyone has good experience on No 2 and 3?
> Or do I miss other better solutions?
>
> Thanks for any suggestion/comment!
>
> Jay
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

