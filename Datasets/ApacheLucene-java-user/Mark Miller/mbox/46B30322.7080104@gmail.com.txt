FROM: Mark Miller <markrmil...@gmail.com>
SUBJECT: Re: Performance improvements using writer.delete vs reader.delete
DATE: 3 Aug 2007

Also, IndexWriter probably buffers better than you would. If you buffer 
a delete with IndexWriter and then add a document that would be removed 
by that delete right after, when the buffered deletes are flushed, your 
latest doc will not be removed. Its unlikely your own buffer system 
would work so well.

- Mark

Doron Cohen wrote:
> Andreas Knecht wrote:
>
>   
>> We're considering to use the new IndexWriter.deleteDocuments call rather
>> than the IndexReader.delete call.  Are there any performance
>> improvements that this may provide, other than the benefit of not having
>> to switch between readers/writers?
>>
>> We've looked at LUCENE-565, but there's no clear view of performance
>> enhancements over the old IndexReader call.
>>     
>
> I think Yonik's comment in 565 holds here -
> http://issues.apache.org/jira/browse/LUCENE-565#action_12432155
> - if your application is buffering deletes/updates and
> then batch the deletes you probably won't see a large
> improvement. But if your application does not buffer
> the deletes and does not batch them, then I believe
> moving to IndexWriter.delete() (and update()) should
> buy you performance improvement, because IndexWriter
> would now buffer the deletes for you.
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>
>   

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


