FROM: "Kevin L. Cobb" <kevin.c...@emergint.com>
SUBJECT: RE: Subversion conversion
DATE: 3 Feb 2005

We recently started using SVN for SCM, were using VSS. We're trying out
approach A, branching off for each release. Development always develops
on the trunk, except when a bug is discovered that needs to be patched
to a previous version of the product. When that scenario comes up (and
it never has), then the developer has to make the change to the branched
version that needs to be patched and then must merge those changes into
other branches and the trunk.  

It seems to be a cleaner approach, at least for now. Of course, for an
open source project like Lucene, I'm not sure branching is necessary at
all. Anyone have any other models to use for SCM, I'd love to hear them,

Here's some ASCII art showing our model:

                                                     +--- branch release
1.2
                                                     |
---trunk----|-------trunk------|------trunk----------|-------trunk------
---
            |                  |
            |                  +------ branch release 1.1
            |
            +---- branch release 1.0 -------
 

Kevin Cobb


-----Original Message-----
From: Chakra Yadavalli [mailto:chakra.yadavalli@gmail.com] 
Sent: Wednesday, February 02, 2005 7:50 PM
To: Lucene Users List
Subject: Re: Subversion conversion

Hello ALL, It might not be the right place for it but as we are talking
about SCM, I have a quick question. First, I haven't used CVS/SVN on any
project. I am a ClearCase/PVCS guy. I just would like to know WHICH
CONFIGURATION MANAGEMENT PLAN DO YOU FOLLOW IN LUCENE DEVELOPMENT.

PLAN A: DEVELOP IN TRUNK AND BRANCH OFF ON RELEASE
Recently I had a discussion with a friend about developing in the TRUNK
(which in the /main in ClearCase speak),  which my friend claims that is
done in the APACHE/Open Source projects. The main advantage he pointed
was that Merging could be avoided if you are developing in the TRUNK.
And when there is a release, they create a new Branch (say LUCENE_1.5
branch) and label them. That branch will be used for maintenance and any
code deltas will be merged back to TRUNK as needed.

PLAN B: BRANCH OF BEFORE PLANNED RELEASE AND MERGE BACK TO MAIN/TRUNK
As I am from a "private workspace"/"isolated development" school of
thought promoted by ClearCase, I am used to create a branch at the
project/release initiation and develop in that branch (say /main/dev).
Similarly, we have /main/int for making changes when the project goes to
integration phase, and a /main/acp branch for acceptance. In this
school, the /main will always have fewer versions of files and the
difference between any two consecutive versions is the NET CHANGE of
that SCM element (either file or dir) between two releases (say LUCENE
1.4 and 1.5).

Thanks in advance for your time.
Chakra Yadavalli
http://jroller.com/page/cyblogue

> -----Original Message-----
> From: aurora [mailto:aurora00@gmail.com]
> Sent: Wednesday, February 02, 2005 4:25 PM
> To: lucene-user@jakarta.apache.org
> Subject: Re: Subversion conversion
> 
> Subversion rocks!
> 
> I have just setup the Windows svn client TortoiseSVN with my favourite
> file manager Total Commander 6.5. The svn status and commands are
> readily
> integrated with the file manager. Offline diff and revert are two
things
> I
> really like from svn.
> 
> > The conversion to Subversion is complete.  The new repository is
> > available to users read-only at:
> >
> >       http://svn.apache.org/repos/asf/lucene/java/trunk
> >
> > Besides /trunk, there is also /branches and /tags.  /tags contains
all
> 
> > the CVS tags made so that you could grab a snapshot of a previous
> > version.  /trunk is analogous to CVS HEAD.  You can learn more about
> the
> > Apache repository configuration here and how to use the command-line
> > client to check out the repository:
> >
> >       http://www.apache.org/dev/version-control.html
> >
> > Learn about Subversion, including the complete O'Reilly Subversion
> book
> > in electronic form for free here:
> >
> >       http://subversion.tigris.org
> >
> > For committers, check out the repository using https and your Apache
> > username/password.
> >
> > The Lucene sandbox has been integrated into our single Subversion
> > repository, under /java/trunk/sandbox:
> >
> >       http://svn.apache.org/repos/asf/lucene/java/trunk/sandbox/
> >
> > The Lucene CVS repositories have been locked for read-only.
> >
> > If there are any issues with this conversion, let me know and I'll
> bring
> > them to the Apache infrastructure group.
> >
> >       Erik
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
> For additional commands, e-mail: lucene-user-help@jakarta.apache.org
> 


-- 
Visit my weblog: http://www.jroller.com/page/cyblogue

---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


