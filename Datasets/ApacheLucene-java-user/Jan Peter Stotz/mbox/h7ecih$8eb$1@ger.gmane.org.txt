FROM: Jan Peter Stotz <jpst...@gmx.de>
SUBJECT: Unintelligent implementation of IndexWriter locking?
DATE: 30 Aug 2009

Hi Lucene users,

at the moment I have some problems with the locking mechanism of
IndexWriter. Some times my application quits/terminates before I can close
the IndexWriter. Then the "write.lock" file remains and prohibits every
write access to my index. Of course I could simply unlock the directory
with the index but from the description of the unlock mechanism I read out
that it does not check if some other process still holds the lock and
therefore concurrent writes from multiple process may occur.

Is the locking mechanism really so "dumb"?
If yes - why does Lucene not use a more intelligent approach, e.g. the one
via RandomAccessFile as it is presented here:

http://jimlife.wordpress.com/2008/07/21/java-application-make-sure-only-singleone-instance-running-with-file-lock-ampampampampamp-shutdownhook/

Ciao, Jan


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


