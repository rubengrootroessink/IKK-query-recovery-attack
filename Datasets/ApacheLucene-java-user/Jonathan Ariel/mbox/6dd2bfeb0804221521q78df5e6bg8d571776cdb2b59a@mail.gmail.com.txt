FROM: "Jonathan Ariel" <ionat...@gmail.com>
SUBJECT: Re: MoreLikeThis over a subset of documents
DATE: 22 Apr 2008

But that doesn't help me with my problem, because the interesting terms are
taken from the entire index and not a subset as I need.
On Tue, Apr 22, 2008 at 6:46 PM, Glen Newton <glen.newton@gmail.com> wrote:

> Instead of this:
>
> MoreLikeThis mlt = new MoreLikeThis(ir);
> Reader target = ... // orig source of doc you want to find similarities to
> Query query = mlt.like( target);
> Hits hits = is.search(query);
>
> do this:
>
> MoreLikeThis mlt = new MoreLikeThis(ir);
> Reader target = ... // orig source of doc you want to find similarities to
> Query moreQuery = mlt.like( target);
> BooleanQuery bq = new BooleanQuery();
> bq.add(moreQuery, BooleanClause.Occur.MUST);
> Query restrictQuery = new TermQuery(new Term("Category", "A"));
> bq.add(restrictQuery, BooleanClause.Occur.MUST);
> Hits hits = is.search(bq);
>
> -glen
>
> 2008/4/22 Jonathan Ariel <ionathan@gmail.com>:
> > Is there any way to execute a MoreLikeThis over a subset of documents? I
> >  need to retrieve a set of interesting keywords from a subset of
> documents
> >  and not the entire index (imagine that my index has documents
> categorized as
> >  A, B and C and I just want to work with those categorized as A). Right
> now
> >  it is using docFreq from the IndexReader. So I looked into the
> >  FilterIndexReader to see if I can override the docFreq behavior, but
> I'm not
> >  sure if it's possible.
> >
> >  What do you think?
> >
> >  Jonathan
> >
>
>
>
> --
>
> -
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

