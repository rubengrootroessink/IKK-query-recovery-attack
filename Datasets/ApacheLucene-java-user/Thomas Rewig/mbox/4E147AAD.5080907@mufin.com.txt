FROM: Thomas Rewig <tre...@mufin.com>
SUBJECT: name matching / mapping
DATE: 6 Jul 2011

  Hello,

until now, we use a stupid %like% SQL query script to assign the 
following terms for Id/Item mapping in different id-spaces:

john wayne == john wayne
wayne, john == john wayne

I can imagine that Lucene offers much more possibilities for this 
assignment.
Maybe with Lucene is also possible to match:

j. wayne == john wayne
john w. == john wayne

and do not link

J. Smith != john wayne
John S. != john wayne

I've searched the web on this topic and found a very old forum post that 
it suggesting that lucene had not yet developed so far to solve this task.

http://mail-archives.apache.org/mod_mbox/lucene-java-user/200704.mbox/%3C84A3C846-73CB-4D04-AA7D-FD7D957803D3@gmail.com%3E

I wonder whether there is now a clever standard approach using Lucene to 
solve this problem?

I can imagine that a approach like the Spellchecker is using might work. 
If the Spellindex holds all names of the second id-space and the first 
id-space is used for the querrys.

String[] suggestions = spellchecker.suggestSimilar("john w.", 5);

But is there a better approach?
Can someone point me in the right direction for a effective approach?

Thanks in advance
Thomas

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


