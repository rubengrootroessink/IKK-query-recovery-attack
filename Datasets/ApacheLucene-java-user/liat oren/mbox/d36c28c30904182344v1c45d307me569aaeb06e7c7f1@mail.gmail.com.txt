FROM: liat oren <oren.l...@gmail.com>
SUBJECT: Re: Query scoring
DATE: 19 Apr 2009

Hi,

You can see the output below:
**** 1.0 ***** (this is the score)
4817674 5664274 6361333 (query)
4817674 5664274 6361333  (doc 0)
0.0 = (NON-MATCH) product of:
  0.0 = (NON-MATCH) sum of:
  0.0 = coord(0/3)
********************************************************
**** 0.13811989 *****
4817674 5664274 6361333 (query)
5172812 6361333 (doc 1)
0.0 = (NON-MATCH) product of:
  0.0 = (NON-MATCH) sum of:
  0.0 = coord(0/3)
Thanks
2009/4/17 Erick Erickson <erickerickson@gmail.com>

> Well, let's see the results of toString and/or Explain *from your code*.
> Otherwise, you haven't given us much to go on.
>
> Best
> Erick
>
> On Fri, Apr 17, 2009 at 1:07 AM, liat oren <oren.liat@gmail.com> wrote:
>
> > Thanks for the answer.
> >
> > In Luke, I used the WhiteSpaceAnalyzer as well. The scores AND the
> explain
> > method worked perfectly.
> >
> > In my application, I checked for the query - it contains the numbers
> > splitted in different term queries so it prepares it well. Also the
> scoring
> > is good. However the explain shows NO MATCH so all the parts of the
> > calculations are 0. very strange...
> >
> > Best,
> > Liat
> >
> > 2009/4/16 Erick Erickson <erickerickson@gmail.com>
> >
> > > Hmmm, try query.toString() and/or query.explain().
> > >
> > > Also, try using Luke to see what is actually in the document.
> > > BTW, what analyzer did you use in Luke? Luke also has an
> > > explain (tab?) that will show you what Luke does, which may
> > > be useful.
> > >
> > > The default operator should be "OR", but looking at the actual
> > > query should help you figure out whether that's happening.
> > >
> > > Best
> > > Erick
> > >
> > >
> > > On Thu, Apr 16, 2009 at 8:01 AM, liat oren <oren.liat@gmail.com>
> wrote:
> > >
> > > > I wanted to add also that I index it tokenized and that when I use
> Luke
> > > to
> > > > do this search, it gives the correct results.
> > > >
> > > > Should I run the query differntly than the way I do?
> > > >
> > > > 2009/4/16 liat oren <oren.liat@gmail.com>
> > > >
> > > > >  Hi,
> > > > >
> > > > > I try to understand why the following query gives the scoring
> below:
> > > > >
> > > > > document 1 : a b c document 2 : g k a h u c
> > > > >
> > > > >
> > > > > 0.0 = (NON-MATCH) product of:
> > > > >   0.0 = (NON-MATCH) sum of:
> > > > >   0.0 = coord(0/3)
> > > > > 0.06155877
> > > > >
> > > > > The query code is:
> > > > >    IndexSearcher searcher = new IndexSearcher(path);
> > > > >    Analyzer analyzer = new StandardAnalyzer();
> > > > >    QueryParser parser = new QueryParser("text", analyzer);
> > > > >    Query query = parser.parse("g k a h u c");
> > > > >    Hits hits = searcher.search(query);
> > > > > I also tried the WhiteSpaceAnalyzer.
> > > > >
> > > > > Why does it give me "no match"?
> > > > > doesn't if have to do "or" on each of the letters "g k a h u c"?
> > > > >
> > > > > Thanks,
> > > > > Liat
> > > > >
> > > > >
> > > > >
> > > > >
> > > >
> > >
> >
>

