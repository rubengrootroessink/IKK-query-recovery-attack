FROM: Peter W. <pe...@marketingbrokers.com>
SUBJECT: Re: In memory MultiSearcher
DATE: 22 May 2007

Erick,

Thanks for the reply, this is a web application.

If you want to serve image files in a scalable fashion
on the Internet you make Apache serve them from
memory, not the filesystem.

For databases, some sites use a distributed object
memory caching system such as memcached.

I was hoping the idea translates to Lucene and
was trying to overcome reading multiple indexes
from attached disks into main memory on one
machine first, then across a balanced farm.

I think what you are saying is use FSDirectories and
the regular built-in Lucene caching provided instead.

Let's give that a try in the servlet init() method!

Regards,

Peter W.


On May 21, 2007, at 2:46 PM, Erick Erickson wrote:

> Why are you doing this in the first place? Do you actually have
> evidence that the default Lucene behavior (caching, etc) is inadequate
> for your needs?
>
> I'd *strongly* recommend, if you haven't, just using the regular
> FSDirectories rather than RAMDirectories and only getting
> complex if that's too slow...
>
> I ask because I am searching FS-based indexes that are 4G with
> no problem. The index *was* 8G and had only a 10% performance hit.

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


