FROM: Michael McCandless <luc...@mikemccandless.com>
SUBJECT: Re: Yet another NFS Question...
DATE: 27 Apr 2009

"In theory" either solution will work, from Lucene's standpoint.  But
this is not well-explored territory: you are a pioneer!  Please report
back on your results :)

Usually (and this may be different in your app), search performance
trumps indexing performance, so my guess is you'd want the index
hosted on the same machine doing searching.  If you do it this way,
it's possible you won't need a custom IndexDeletionPolicy, because the
searchers will hold open files via the local filesystem which should
properly protect them when an NFS client (the indexer machine) tries
to delete them.

Mike

On Mon, Apr 27, 2009 at 3:42 PM, David Seltzer <dseltzer@tveyes.com> wrote:
> Hi everyone,
>
> There has been a lot of discussion regarding Lucene+NFS pitfalls. I'm
> not sure how to proceed with a more distributed operation.
>
> I'm trying to take the indexing load off of our search server. I can do
> this either by building a new server which hosts the Indexer and the
> Index, or a server which hosts the Searcher and the Index. The two boxes
> will be connected via NFS.
>
> In our system there are no updates or deletes. Just lots of "add" and
> "optimize" calls.
>
> What is the best way to handle this sort of situation? My inclination is
> build a new Search Server (with fast HDDs and lots of Memory for tomcat)
> and leave the indexer on the old server connected via NFS.
>
> Thanks!
>
> -Dave
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


