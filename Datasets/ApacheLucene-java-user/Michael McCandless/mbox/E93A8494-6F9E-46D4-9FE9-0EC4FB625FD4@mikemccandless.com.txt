FROM: Michael McCandless <luc...@mikemccandless.com>
SUBJECT: Re: Caused by: java.io.IOException: read past EOF on Slave
DATE: 26 Sep 2008


Which version of Lucene is this?  Looks like 2.3.x -- what's the x?

Can you run your app server with assertions enabled for  
org.apache.lucene.*?  It may catch something sooner.

Can you try running CheckIndex after the snapshot is produced, just to  
see if there is any corruption?

Your first exception (on the slave) seems like the *.fdx file of that  
one segment is somehow truncated, or, you are passing an out-of-bounds  
document number to IndexReader.document.

Your 2nd one (on the master) looks like an invalid (deleted) document  
number is being passed to IndexReader.document.

What is the context of these IndexReader.document(...) calls?  How are  
you getting the doc numbers that you're passing to them?  In both  
cases, an invalid doc number would explain your exception.  Are you  
doing any search caching, where you cache hits and then much later try  
to load the documents for each hit, or, something?

More questions below...

rahul_k123 wrote:

>
> The following are steps..
>
> 1.We do indexing every 5 minutes on master and when indexing is done a
> snapshot is taken

The IndexWriter is definitely closed before the snapshot is taken?

Are you creating a new index, or, just adding to an existing one?

> 2. On slave we have a cronjob which runs snappuller every 3 minutes  
> to check
> for new snapshots and installs it on slave if it finds new one

Sounds OK.  Does this entail a restart of the reader after the  
snapshot is installed?

> (I am not using SOLR for indexing )
>
>
> The file system is ext3

OK.

Mike


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


