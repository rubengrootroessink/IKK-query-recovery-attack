FROM: Michael McCandless <luc...@mikemccandless.com>
SUBJECT: Re: readModifiedUTF8String stuck
DATE: 24 Apr 2009

On Tue, Apr 21, 2009 at 6:25 PM, MakMak <powgri@gmail.com> wrote:
>   Ran CheckIndex. This is what it prints out:
>
> cantOpenSegments: false
> numBadSegments: 0
> numSegments: 14
> segmentFormat: FORMAT_HAS_PROX [Lucene 2.4]
> segmentsFileName: segments_2od
> totLoseDocCount: 0
> clean: true
> toolOutOfDate: false

Actually, CheckIndex has a main method that prints much more detail.
But still it sounds like there are no problems with your index.

Have you tried reindexing?  I'd be curious to know if the problem goes
away with a fresh index.

I wonder if somehow Lucene is asking for a ridiculously immense string
to be created (and that's why you're hung inside String's ctor.

> Our application is a very resource intensive application. We have everything
> in the RAM for best possible response time and granularity of our
> authorization model. We give around 6GB of RAM for the application. During
> stress tests the RAM consumption gets used up to "2% free". But this has
> always been the case when we were on 2.3.2. With 2.4.1 is when we started
> hitting upon these stuck threads.
>
>
> There are other differences between the customer and our setup apart from
> SAN like http/https, webservices enabled/disabled etc but these shouldnt
> have anything to do with this problem.
>
> Currently we are trying to bring the indexes  out of the SAN and into the
> local filesystem to see if these issues remain. Will keep you posted.

OK keep us posted...

> Anymore hints?

Are you able to reproduce the issue locally?  If so we can start
sprinkling prints...?

Mike

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


