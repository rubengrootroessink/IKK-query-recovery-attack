FROM: "Marcelo Ochoa" <marcelo.oc...@gmail.com>
SUBJECT: Re: Opening an index directory inside a jar
DATE: 30 May 2008

Hi Ravi:
  I am  not a Lucene guru but IMO you has to write a new Directory
class which opens the jar a provides access to Lucene.
  May be a sub class of FSDirectory will work, but only for read-only behaviour.
  I have done this set of classes to implement Lucene storage inside
Oracle JVM using BLOB as storage.
  Best regards, Marcelo.

On Fri, May 30, 2008 at 1:03 PM, Ravi_116 <ravi116@gmail.com> wrote:
>
> Any ideas/suggestions ??
> Ravi
>
>
> Ravi_116 wrote:
>>
>> I get the following error trace -
>>
>> java.io.FileNotFoundException: no segments* file found in
>> org.apache.lucene.store.FSDirectory@/Users/projects/workspace/project_name/web/file:/Users/.m2/repository/com/mycompany/project_name/2.1.0-internal-65-SNAPSHOT/suggesters-2.1.0-internal-65-SNAPSHOT.jar!/luceneFiles/index:
>> files:
>>         at
>> org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:587)
>>
>> The crux of the issue seems to be that lucene cannot open segments file
>> that is inside the jar (under luceneFiles/index directory)
>>
>> The current project structure involves creating module jars in maven and
>> having a web tier module use the lucene module jar. The index files are
>> built at build time as part of lucene module project. The issue with
>> building the index separate from the application  is that a bunch of
>> unit/integration/functional tests depend on index files to be created. The
>> manual step of creating the index files breaks the automated CI builds or
>> some reliance on building the index in some tmp directory. Unfortunately
>> that approach has issues if we run tests concurrently. Also, building the
>> index takes a couple of minutes, so generating them on the fly for tests
>> is expensive and increases the build time.
>>
>> The only options suggested in the forums is to do something special like
>> extending the Directory class to open the jar. Is there another way to
>> solve this problem in an easier manner or am i missing something simple ?
>>
>> Any thoughts/suggestions are appreciated,
>>
>> Ravi
>>
>>
>>
>
> --
> View this message in context: http://www.nabble.com/Opening-an-index-directory-inside-a-jar-tp17526678p17562588.html
> Sent from the Lucene - Java Users mailing list archive at Nabble.com.
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>



-- 
Marcelo F. Ochoa
http://marceloochoa.blogspot.com/
http://marcelo.ochoa.googlepages.com/home
______________
Do you Know DBPrism? Look @ DB Prism's Web Site
http://www.dbprism.com.ar/index.html
More info?
Chapter 17 of the book "Programming the Oracle Database using Java &
Web Services"
http://www.amazon.com/gp/product/1555583296/
Chapter 21 of the book "Professional XML Databases" - Wrox Press
http://www.amazon.com/gp/product/1861003587/
Chapter 8 of the book "Oracle & Open Source" - O'Reilly
http://www.oreilly.com/catalog/oracleopen/

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


