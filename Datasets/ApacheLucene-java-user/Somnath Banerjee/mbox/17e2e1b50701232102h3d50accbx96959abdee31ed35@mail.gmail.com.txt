FROM: "Somnath Banerjee" <somnath.baner...@gmail.com>
SUBJECT: Re: Long Query Performance
DATE: 24 Jan 2007

Here is the code. Let me know if you need any clarification

// MaxConcepts is set to 100

long stTime = System.currentTimeMillis();

// bq is the Boolean query constructed out of the title of the query
document
TopDocs docs = searcher.search(bq, null, MaxConcepts);

// Store the title of the result documents in a HashTable
for(int i=0; i<MaxConcepts && i<docs .scoreDocs.length; i++) {

         String title = reader.document(docs
.scoreDocs[i].doc).get("title");
         encycloConcepts.put(title, docs .scoreDocs[i].score);  //
encycloConcepts
is a HashTable

}

System.out.println("Query Length: "+clauseCnt+" Time Taken: "+(
System.currentTimeMillis()-stTime));   // clauseCnt is the number of clause
in the query

On 1/24/07, Chris Hostetter <hossman_lucene@fucit.org> wrote:
>
>
> that's still doesn't tell us what you are doing -- "query time" can mean a
> lot of things ... are you using the Hits class? are you iterating over
> results? are you pulling out stored fields? are you sorting? are you using
> any Filters?
>
> questions about improving concrete performance can only be answered by
> looking at concrete code -- not vague discussions about the type of
> activity being performed.
>
>
>
>
> -Hoss
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

