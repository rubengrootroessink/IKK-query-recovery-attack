FROM: "Cohan, Sean" <SCo...@goSPS.com>
SUBJECT: RE: Indexing in a CBD Environment
DATE: 11 Dec 2002

petite_abeille, please enlighten me.  We will be using Oracle 9i.  Another
project using a similar architecture is coming up with a design for a
'Search Component'.  The reason they are looking into an indexing scheme is
to speed up search response time where we will have data distributed, across
databases on separate boxes, related via the associative tables I talked
about.  

Is there a better way to provide an acceptable searching mechanism using the
relational database engine?

Thanks.

-----Original Message-----
From: petite_abeille [mailto:petite_abeille@mac.com]
Sent: Wednesday, December 11, 2002 2:08 AM
To: Lucene Users List
Subject: Re: Indexing in a CBD Environment



On Wednesday, Dec 11, 2002, at 07:16 Europe/Zurich, Otis Gospodnetic 
wrote:

> It uses Lucene as an
> object store, of sort, I believe, with variuos relations between
> objects (I did not look at the source, but I suspect it does this based
> on the functionality it offers).

Yep. The basic approach ZOE takes is to create one index per class and 
index the primary and foreigns key as keywords. It then query the 
different indexes to simulate a "relational" storage... Which is all 
handy, dandy... On the other hand, if you already have a relational 
database in the first place, there is no reason to go through this 
circus in the first place...

>   You may want to look at its source.

If you are so inclined, you can check the alt.dev.szobject package for 
more gory details. In particular, SZIndex deals with Lucene directly.

You can find the app and its source here:

http://guests.evectors.it/zoe/

Cheers,

PA.



--
To unsubscribe, e-mail:
<mailto:lucene-user-unsubscribe@jakarta.apache.org>
For additional commands, e-mail:
<mailto:lucene-user-help@jakarta.apache.org>

--
To unsubscribe, e-mail:   <mailto:lucene-user-unsubscribe@jakarta.apache.org>
For additional commands, e-mail: <mailto:lucene-user-help@jakarta.apache.org>


