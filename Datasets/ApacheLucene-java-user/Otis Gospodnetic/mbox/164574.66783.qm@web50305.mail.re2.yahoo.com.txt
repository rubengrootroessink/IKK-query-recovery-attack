FROM: Otis Gospodnetic <otis_gospodne...@yahoo.com>
SUBJECT: Re: Implementing filtering based on multiple fields
DATE: 7 Jan 2010

For something like CSE, I think you want to isolate users and their data/indices.

I'd look at Bixo or Nutch or Droids ==> Lucene or Solr

Otis
--
Sematext -- http://sematext.com/ -- Solr - Lucene - Nutch



----- Original Message ----
> From: Yaniv Ben Yosef <yanivby@gmail.com>
> To: java-user@lucene.apache.org
> Sent: Thu, January 7, 2010 3:54:22 PM
> Subject: Implementing filtering based on multiple fields
> 
> Hi,
> 
> I'm very new to Lucene. In fact, I'm at the beginning of an evaluation
> phase, trying to figure whether Lucene is the right fit for my needs.
> The project I'm involved in requires something similar to the Google Custom
> Search Engine (CSE). In CSE, each user can
> define a set (could be a large set) of websites, and limit the search to
> only those websites. So for example, I can create a CSE that searches all
> web pages on cnn.com, msnbc.com and nytimes.com only.
> I am trying to understand whether and how I can do something similar in
> Lucene.
> 
> The FAQ hints about this possibility
> here,
> but it mentions a class that no longer exists in 3.0 (QueryFilter), and is
> very laconic about the suggested options. Also I'm not sure how well it will
> perform in my use case (or even if it fits at all).
> I thought about creating a separate index for each user or CSE. However, my
> system should be able to handle tens of thousands of concurrent users. I
> haven't done any analysis yet on how this will affect CPU, RAM, I/O and
> storage size, but was wondering if any of you experienced Lucene
> users/developers think it's a good direction.
> If that's not a good idea, what would be a good strategy here?
> 
> Any help will be much appreciated,
> Yaniv


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


