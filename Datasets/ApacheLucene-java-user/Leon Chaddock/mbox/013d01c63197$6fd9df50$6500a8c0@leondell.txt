FROM: "Leon Chaddock" <leonchadd...@macranet.co.uk>
SUBJECT: Re: Size + memory restrictions
DATE: 14 Feb 2006

Eugene or anyone else,
Do you know of any solutions?

At the moment we have 4gb assigned to jvm but we only query on 4 of our 4gb 
segments, if we try and query against more we get memory problems.

Thanks

Leon

----- Original Message ----- 
From: "Eugene Tuan" <eugene@kazeon.com>
To: <java-user@lucene.apache.org>
Sent: Tuesday, February 14, 2006 6:38 PM
Subject: RE: Size + memory restrictions



Yes. We have the same problem. It is mainly because TermInforReader.java
that takes memory space to keep *.tii.

Eugene


-----Original Message-----
From: Leon Chaddock [mailto:leonchaddock@macranet.co.uk]
Sent: Tuesday, February 14, 2006 8:43 AM
To: java-user@lucene.apache.org
Subject: Size + memory restrictions

Hi,
we are having tremendous problems building a large lucene index and
querying
it.

The programmers are telling me that when the index file reaches 3.5 gb
or 5
million docs the index file can no longer grow any larger.

To rectify this they have built index files in multiple directories. Now

apparently my 4gb memory is not enough to query.

Does this seem right to people or does anyone have any experience on
largish
scale projects.

I am completely tearing my hair out here and dont know what to do.

Thanks

Leon
----- Original Message ----- 
From: "Chun Wei Ho" <cwho.work@gmail.com>
To: <java-user@lucene.apache.org>
Sent: Monday, February 13, 2006 10:41 AM
Subject: Re: Suggesting refine searches with Lucene


Thanks. But I am actually looking for approaches/libraries which will
help me to come up with the suggested "refine searches".

For example I might search for "accident" on the headlines at a news
site, which would come back with lots of hits. I am looking for
something that would analyze the headlines (or some other specified
text field) of all those hits and come up with a list of refined
searches that would return a specific/considerable subset of the
results, e.g. "Traffic", "plane", "boating", etc, being frequent
occurrences of headline text in news that include "accident" in the
headlines.

I guess its a matter of finding frequently occurring subsequences with
some intelligent guessing but I was hoping that someone else better
would have already done it in a library that I could adapt.

Regards,
CW


On 2/13/06, Ravi <ravi.jaladanki@siti.com> wrote:
> Hi ,
>
>
> I have implemented by using query "mergeBooleanQueries" method... in
this
> approach I have created one POJO class of RefineQuery which contains
one
> variable called Query and I will set whenever I get a search..
> And next time if it is a refined search I will merge current query
with
> the
> refinedquery object and get new query and pass to lucene and set the
new
> query to refined search object .... this is working fine.. let me know
if
> have any further ideas or any new technique to implement refined
search
>
>
>
> if(objSearchParameters.isBSearchInSearch()){
>         Query q2                =
> Query.mergeBooleanQueries(new Query[]{  objRefineQuery.getQuery(),
> booleanQuery });
>                 objRefineQuery.setQuery(q2);
>         hits    =        searcher.search(q2);
>             }else{
>                 objRefineQuery.setQuery(booleanQuery);
>         hits    = searcher.search(booleanQuery);
>             }
>
>
>
>
>
>
>
> public class RefineQuery {
>
>         private Query   query = null;
>
>
>         public Query getQuery() {
>                 return query;
>         }
>
>
>         public void setQuery(Query query) {
>                 this.query = query;
>         }
>
>
>         public String toString(){
>           return query.toString();
>         }
>
> }
>
>
>
>
> Regards,
> Ravi Kumar Jaladanki
>
> -----Original Message-----
> From: Chun Wei Ho [mailto:cwho.work@gmail.com]
> Sent: Monday, February 13, 2006 3:05 PM
> To: java-user@lucene.apache.org
> Subject: Suggesting refine searches with Lucene
>
> Hi,
>
> I am trying to suggest refine searches for my Lucene search. For
> example, if a search turned out too many searches, it would list a
> number of document title subsequences that occurred frequently in the
> results of the previous search, as possible candidates for refining
> the search.
>
> Does anyone know the right/any approach to implementing this in a
> Lucene-based search app?
>
> Thanks.
>
> CW
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org





-- 
Internal Virus Database is out-of-date.
Checked by AVG Free Edition.
Version: 7.1.375 / Virus Database: 267.15.0/248 - Release Date:
01/02/2006



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org





-- 
Internal Virus Database is out-of-date.
Checked by AVG Free Edition.
Version: 7.1.375 / Virus Database: 267.15.0/248 - Release Date: 01/02/2006



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


