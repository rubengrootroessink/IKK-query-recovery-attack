FROM: Lebiram <lebi...@ymail.com>
SUBJECT: Search using MultiSearcher generates OOM on a 1GB total Partitioned indeces
DATE: 1 Apr 2009

Hi All, 

I have the following query on a 1GB index with about 12 million docs :
As you can see the terms consist of wildcards...

query.toString()=+(+content:g* +content:h* +content:d* +content:s* +content:a* +content:w*
+content:b* +content:c* +content:m* +content:e*) +((+sender:cpuser9 +viewers:cpuser4) (+sender:cpuser4
+viewers:cpuser9) (+viewers:cpuser9 +viewers:cpuser4))

The Searcher is a MultiSearcher with 4 IndexSearchers pointing to 4 different Lucene Index.
This search returns very few records, several ten thousand hits.

Java is assigned with 1GB max memory.

Somehow this search eats the entire java heap space and causes OOM. 
Looking at jProfiler, i see org.apache.lucene package generating a lot of objects which I
believe is taking all this space.

Can anyone explain the reason why this particular search might take so much memory?
Is there anything I am doing wrong here?
More importantly, is there anything I can do to improve this?

-M


      
