FROM: Ian Lea <ian....@gmail.com>
SUBJECT: Re: questions on upgrading to 3.0: Version.LUCENE_* and	Field.setOmitNorms()
DATE: 18 Feb 2010

But typically you wouldn't need to reindex, would you?  From the 3.0
javadocs for LUCENE_CURRENT:

WARNING: if you use this setting, and then upgrade to a newer release
of Lucene, sizable changes may happen. If precise back compatibility
is important then you should instead explicitly specify an actual
version.

I read this as meaning that it is safe to use it unless you want
precise back compatibility and are prepared to accept the risk that
you may have to reindex.  When upgrading my code and indexes to 3.0
I've used LUCENE_CURRENT and haven't reindexed, and haven't noticed
any problems.


--
Ian.



On Thu, Feb 18, 2010 at 1:20 PM, Robert Muir <rcmuir@gmail.com> wrote:
> Only use LUCENE_CURRENT if you do not care about backwards compatibility at
> all: e.g. you are perfectly happy re-indexing all data when you upgrade the
> lucene jar file in future.
>
> its not about relying on quirks in previous versions of lucene, its about
> being compatible with changes in future versions, you set it to LUCENE_30 or
> whatever so that you can upgrade to 3.1 jar, without reindexing.
>
> On Thu, Feb 18, 2010 at 6:42 AM, Ian Lea <ian.lea@gmail.com> wrote:
>
>>
>> Unless you are relying on quirks in particular versions of lucene
>> setting it to LUCENE_CURRENT is probably best.
>>
>>
> --
> Robert Muir
> rcmuir@gmail.com
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


