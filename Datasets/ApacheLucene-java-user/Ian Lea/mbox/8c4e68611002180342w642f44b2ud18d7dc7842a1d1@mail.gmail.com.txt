FROM: Ian Lea <ian....@gmail.com>
SUBJECT: Re: questions on upgrading to 3.0: Version.LUCENE_* and	Field.setOmitNorms()
DATE: 18 Feb 2010

> previously I was using 2.9 (upgraded from 2.4 but did not fix warnings
> etc). Now I have upgraded to 3.0, so I had to fix all deprecated
> methods etc. My question is withÂ Version type parameter in some
> Token* classes.
>
> Some of our customers have our product with lucene 2.4 (some upgraded
> from 2.3), and some have a newer version with lucene 2.9 (with
> warnings etc). What Version value should I use now? The smallest say
> Version.LUCENE_23 ? Any concern when they upgrade to the next of our
> version with lucene 3.0?

Unless you are relying on quirks in particular versions of lucene
setting it to LUCENE_CURRENT is probably best.

> Also I was using Field.Index.TOKENIZED and Field.Index.UN_TOKENIZED,
> but all fields had field.setOmitNorms(true);
> Now I see there is Field.Index.NOT_ANALYZED_NO_NORMS, I guess I can
> just use Field.Index.ANALYZED/Field.Index.NOT_ANALYZED and continue
> calling field.setOmitNorms(true) on all fields right?

Yes, I think so, but probably best to use ANALYZED_NO_NORMS and
NOT_ANALYZED_NO_NORMS.  Read the javadocs on NOT_ANALYZED_NO_NORMS.


--
Ian.

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


