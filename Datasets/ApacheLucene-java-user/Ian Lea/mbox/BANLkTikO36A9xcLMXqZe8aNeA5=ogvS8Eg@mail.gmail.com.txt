FROM: Ian Lea <ian....@gmail.com>
SUBJECT: Re: Concurrent Issue
DATE: 5 Apr 2011

You don't say exactly how you are dealing with the concurrent access
(one shared Reader/Searcher? Each user with own Reader/Searcher?
Something else?) but the underlying problem is that the reader has
been closed while something else is still using it.  This can easily
happen in a multi-threaded setup: thread A might close the reader
while thread B is still using it.

Options include

 not closing the old reader straight away when open a new one, but
instead stash it somewhere and close it later when you can be
confident nothing else will be using it.

 using the SearcherManager class from Lucene In Action 2nd edition, or
an equivalent.

 catching the AlreadyClosed exception and restarting the search with a
current reader


--
Ian.


On Tue, Apr 5, 2011 at 12:56 PM, Yogesh Dabhi <ydabhi@asite.com> wrote:
> Hi
>
>
>
> My application is cluster in jobss application servers & lucene
> directory was shared.
>
>
>
> Concurrently 5 user access same lucene directory for searching document
>
> That time I got bellow exception
>
> org.apache.lucene.store.AlreadyClosedException: this IndexReader is
> closed
>
>
>
> is there a way to handle such error
>
>
>
> Thanks & Regards
>
> Yogesh
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


