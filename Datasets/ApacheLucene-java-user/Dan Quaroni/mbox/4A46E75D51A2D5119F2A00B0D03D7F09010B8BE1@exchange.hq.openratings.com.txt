FROM: Dan Quaroni <dquar...@OPENRATINGS.com>
SUBJECT: Lots of cpu time spent on IO exceptions?
DATE: 19 Aug 2003

Hi.  I'm using lucene 1.2 on a linux 2.4.18 kernel and I just did a quick
profile of lucene using runhprof under jdk1.3.1, and found that nearly 25%
of the cpu time was going towards an exception that I didn't even know
existed.  Lucene appears to be swallowing whatever it is because I'm not
seeing it thrown to my code.

What's going on?

Thanks!

CPU SAMPLES BEGIN (total = 30) Tue Aug 19 15:21:04 2003
rank   self  accum   count trace method
   1 23.33% 23.33%       7    41 java.lang.Throwable.fillInStackTrace

TRACE 41:
        java.lang.Throwable.fillInStackTrace(Throwable.java:Native method)
        java.lang.Throwable.<init>(Throwable.java:90)
        java.lang.Exception.<init>(Exception.java:38)
        java.io.IOException.<init>(IOException.java:43)
 
org.apache.lucene.analysis.standard.FastCharStream.refill(<Unknown>:Unkn
own line)
 
org.apache.lucene.analysis.standard.FastCharStream.readChar(<Unknown>:Un
known line)
 
org.apache.lucene.analysis.standard.FastCharStream.BeginToken(<Unknown>:
Unknown line)
 
org.apache.lucene.analysis.standard.StandardTokenizerTokenManager.getNex
tToken(<Unknown>:Unknown line)
 
org.apache.lucene.analysis.standard.StandardTokenizer.jj_ntk(<Unknown>:U
nknown line)
 
org.apache.lucene.analysis.standard.StandardTokenizer.next(<Unknown>:Unk
nown line)
 
org.apache.lucene.analysis.standard.StandardFilter.next(<Unknown>:Unknow
n line)
        org.apache.lucene.analysis.LowerCaseFilter.next(<Unknown>:Unknown
line)
        org.apache.lucene.analysis.StopFilter.next(<Unknown>:Unknown line)
 
org.apache.lucene.index.DocumentWriter.invertDocument(<Unknown>:Unknown
line)
        org.apache.lucene.index.DocumentWriter.addDocument(<Unknown>:Unknown
lin
e)
        org.apache.lucene.index.IndexWriter.addDocument(<Unknown>:Unknown
line)

I realize it wasn't a huge set of cpu samples, but why was all this time 

