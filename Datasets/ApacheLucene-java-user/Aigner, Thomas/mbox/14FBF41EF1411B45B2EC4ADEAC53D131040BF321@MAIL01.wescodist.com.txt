FROM: "Aigner, Thomas" <TAig...@WescoDist.com>
SUBJECT: Optimization
DATE: 5 Oct 2005

Howdy all,

	Have a question.. Is there any obvious things that can be done
to help speed up query lookups especially wildcard searches (i.e.
*lamps).  
	We have created a server application on a linux box that listens
to a socket and processes searches as they come in.  We thought that you
should only have one Index Searcher instantiated at a time but this
caused some result set issues so we create a new Index Searcher each
time a query comes in.  (Should this be the case?)  Also, when we scale
up our stress test to 8+ users at the same time, we are seeing large
latency issues from when we call the search to getting results
(eventhough the search lookup time itself is normally very fast except
wildcard lookups).  I am thinking that perhaps there is a queuing method
on the search waiting for resources to do the actual lookup?  

	If any of you have run into a problem akin to this, please don't
hesitate reply with ideas and set me straight as to what I am doing
wrong.

We have played with java heap size but it seems that the memory size of
the java pool does not seem to help with speed too much, just with
looking up with the too many clauses exceptions.

Hope this is not too vague..
Thanks all ahead of time,
Tom


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


