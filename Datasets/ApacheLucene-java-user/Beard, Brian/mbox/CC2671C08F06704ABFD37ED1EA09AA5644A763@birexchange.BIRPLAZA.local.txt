FROM: "Beard, Brian" <Brian.Be...@mybir.com>
SUBJECT: RE: Boolean Query search performance
DATE: 10 Mar 2008

AHA! That is consistent with what is happening now, and explains the
discrepancy.

The original post of parens around each term was because I was adding
them as separate boolean queries, but now with using just the clause the
parens is around the entire clause with the boost.

-----Original Message-----
From: Chris Hostetter [mailto:hossman_lucene@fucit.org] 
Sent: Friday, March 07, 2008 3:23 PM
To: java-user@lucene.apache.org
Subject: Re: Boolean Query search performance


: > additional parens normally indicates that you are actually creating
an
: > extra layer of BooleanQueries (ie: a BooleanQuery with only one
clause for

: look here,
: parens will also be add is each term has a boost value larger than
1.0.

i think you are missreading that code.  the "needParens" variable adds 
parens arroudn the *entire* "this" BooleanQuery if "this" has a boost or
a 
non 0 minShouldMatch value ... BooleanQuery.toString only adds parens 
arround individual clauses if those clauses are themselves boolean 
queries ... which is the point i was making.



-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org




---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


