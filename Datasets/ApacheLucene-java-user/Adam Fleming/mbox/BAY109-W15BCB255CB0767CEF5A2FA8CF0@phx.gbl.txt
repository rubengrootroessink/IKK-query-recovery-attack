FROM: Adam Fleming <afle...@hotmail.com>
SUBJECT: RE: MultiFieldQueryParser doesn't properly filter out documents when the query string specifies to exclude certain terms
DATE: 20 Dec 2006


Hello Gentlemen (+Ladies?),

I'm integrating Lucene into a Spring web-app, and have found a plethora of great web + print
resources to make the integration quick and seamless.  One thing that I have been hard-pressed
to find is a good solution for rebuilding the index on a regular basis.  

I'm curious if a you know of a best-practice (or have found something personally that works)
for rebuilding a Lucene Index w/o service interruptions.  The assumptions are a spring IOC
container w/ an IndexFactory bean.  I have the project configured to work with both FSDirectory
and RamDirectory implementations.   If you don't know Spring, you are free to ignore the details
- I'll adapt your comments to my code :) 

So far I tried rebuilding the index on a regular schedule, but foolishly only added duplicate
documents to an existing index.  

Things I have considered are
 - Using two index directories, and rebuilding one while the other is 
   in use + switching when the rebuilt index is ready.  This would
   cause the app to alternate between two indexes.  
 - Using a single index, and iterating over the index entirely, 
   deleting documents 1 by 1 and re-adding them with fresh data
 - Using a single index, and deleting ALL the documents at once
   and then adding them all back as quickly as possible.


All of my proposed ideas seem fly in the face of Lucene's sipmlicity, and I will be so thankful
to be pointed in the right direction. 


Happy Holidays and  a big Thank You to the active list users, 


Adam Fleming

_________________________________________________________________
Try amazing new 3D maps
http://maps.live.com/?wip=51
---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


