FROM: "Narednra Singh Panwar" <npan...@chambal.com>
SUBJECT: Re: Memory leak (JVM 1.6 only)
DATE: 15 May 2007

try using -Xmx option with your Application. and specify maximum/ minimum
memory for your Application.
Hope this will solve you problem.




On 5/15/07, Stephen Gray <Stephen.Gray@anu.edu.au> wrote:
>
> Hi everyone,
>
> I have an application that indexes/searches xml documents using Lucene.
> I'm having a problem with what looks like a memory leak, which occurs
> when indexing a large number of documents, but only when the application
> is running under JVM 1.6. Under JVM 1.5 there is no problem. What
> happens is that the memory allocated consistently rises during indexing
> until the JVM crashes with an OutOfMemory exception.
>
> I'm using Lucene 2.1, and am using Maik Schreiber's LuceneIndexAccess
> API, which hands out references to cached IndexWriter/Reader/Searchers
> to objects that need to use them, and handles closing and re-opening
> IndexSearchers after documents are added to the index. The application
> is running under Tomcat 6.
>
> I'm a bit out of my depth determining the source of the leak - I've
> tried using Netbeans profiler, which shows a large number of HashMap
> instances that survive a long time, but these are created by many
> different classes so it's difficult to pinpoint one source.
>
> Has anyone found similar problems with Lucene indexing operations
> running under JVM 1.6? Does anyone have any suggestions re how to deal
> with this?
>
> Any help much appreciated.
>
> Thanks,
> Steve
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

