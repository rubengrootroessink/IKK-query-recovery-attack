FROM: heritrix.lucene <heritrix.luc...@gmail.com>
SUBJECT: Re: searching for the part of a term.
DATE: 27 Sep 2006

Hi,
Thanks for yor reply..


> : Since the overhead in first is the speed of the system, i think adopting
> : second method will be better.


Since iMy index size is around 10GB the second method is also taking a lot
of time for queries like
"am".

One more things that i found in

http://www.gossamer-threads.com/lists/lucene/java-user/13345?search_string=Starts%20With%20x%20and%20Ends%20With%20x%20Queries;#13345

was to index rotated token of a word, and then search by the prefix query.
But i think here also i'll face the speed issue because of the prefix
query..(If i am right...)


One more thing that we can do is to prepare the n-grams of a word and then
index each of them.
This way the index size will increase by several magnitude on the cost of
speed...

Is this the way by which i can implement the fastest substring search ????


Regards....




:
> : Is there any other solution for this problem?? Am i going in right
> : direction??
>
> you're definitely on teh right path -- those are the two bigsolutions i
> can think of, which appraoch you should take really depends on the nature
> of your data, what your performance concerns are, and how much development
> time you have.
>
> Here's another good thread you may want to check out...
>
>
> http://www.nabble.com/I-just-don%27t-get-wildcards-at-all.-tf1412243.html#a3804223
>
>
> -Hoss
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

