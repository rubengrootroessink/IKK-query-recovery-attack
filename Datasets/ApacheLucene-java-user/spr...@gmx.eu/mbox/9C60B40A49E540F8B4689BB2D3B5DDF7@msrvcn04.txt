FROM: <spr...@gmx.eu>
SUBJECT: RE: Design questions
DATE: 11 Jan 2008

Hi, 


> You could even store all of the page offsets in your 
> meta-data document
> in a special field if you wanted, then lazy-load that field 
> rather than
> dynamically counting. 

How can I lazy load a field?

> You'd have to be careful that your offsets
> corresponded to the data *after* it was analyzed, but that shouldn't
> be too hard. 

The TermPosition is the position after analyzing?

> You'd have to read this field before deleting the doc
> and make sure it was stored with the replacement.....

Don't understand...

> And, since I'm getting random ideas anyway, here's another.
> The PositionIncrementGap is the "distance" (measured in
> terms) between two tokens. Let's claim that you have no
> page with more than 10,000 (or whatever) tokens. Just
> bump the positionincrementgap to the next 10,000 at the
> start of each page. So, the first term on the first page
> has an offset of 0. the first term on the second page
> has an offset of 10,000. The first term on the third
> page has an offset of 20,000.
> 
> Now, with the SpanNearQuery trick from above, your
> term position modulo 10,000 is also your page. This would
> also NOT match across pages. Hmmmm, I kind of like that
> idea.

But I have to know, how many tokens each page has!?

Thank you!


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


