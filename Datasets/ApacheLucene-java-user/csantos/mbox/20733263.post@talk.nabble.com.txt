FROM: csantos <claudia.cm.san...@gmail.com>
SUBJECT: Re: Transforming german umlaute like ö,ä,ü,ß into oe, ae, ue, ss
DATE: 28 Nov 2008


Hi,

I'm a newbie with Lucene and I started some testing with Lucene 2.2.0.
I developed my own Analyser and my own Filter based on examples found here,
that is:

public class DiacriticAnalyser extends GermanAnalyzer {
....

 @Override 
 public TokenStream tokenStream(String fieldName, Reader reader) { 
   TokenStream result = super.tokenStream(fieldName, reader);
   result = new ISOLatin1DiacriticFilter(result); 
   return result; 

}

}

public class ISOLatin1DiacriticFilter extends TokenFilter {
...

@Override
public final Token next() throws java.io.IOException {
   final Token t = input.next();
    if (t != null)
      t.setTermText(removeDiacritics(t.termText()));
    return t;
}

}

What i don't understand is: isn't the call to input.next() endless
recursive, i mean the TokenStream class is abstract and the TokenFilter
class doesn't implement next()? And who calls next(), i just call the
constructor of ISOLatin1DiacriticFilter class.

regards,
-- 
View this message in context: http://www.nabble.com/Transforming-german-umlaute-like-%C3%B6%2C%C3%A4%2C%C3%BC%2C%C3%9F-into-oe%2C-ae%2C-ue%2C-ss-tp20558345p20733263.html
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


