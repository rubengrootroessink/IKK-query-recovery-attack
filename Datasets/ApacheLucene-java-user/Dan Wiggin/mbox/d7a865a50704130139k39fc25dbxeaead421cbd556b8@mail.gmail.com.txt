FROM: "Dan Wiggin" <danut...@gmail.com>
SUBJECT: Design question
DATE: 13 Apr 2007

I'm reading  this list  eventually but  it a very active list and
useful,thks to all.
But so often, when a developer search how to work with lucene finds normally
the same code for same problems.
I think it will be useful create something like Best practices  with Lucene
or something  similar.

My question for example is a design question. Every time, you talk about a
single index to use, in my case (a platform with user groups no related
among themselves), i thinked the best option is use an index for every
group, and when I need to search something over all i will use a
Multisearcher instance (this action won't be frequently).My question is
how can I do manage all indexation system.
I thinked to create an IndexUpdater class which have a queue to recive all
events over the platform, this queu it will be emptied every X minutes, and
after this, Searcher will be updated.
I won't your opinion how to manage all indexes, for example I can create a
class (for exmaple EntityIndex) for every index which contains their
respetives IndexSearcher,IndexReader,IndexWriter and have every EntityIndex
in a hashmap. When it recived an element added in platform, gets their group
id, and search in hashmap to get its EntityIndex and work over it.

What do you think about this? Perhaps isn't a very good design and I want to
know your advices.

Thk for any reply, and I hope my question will be useful to others.

