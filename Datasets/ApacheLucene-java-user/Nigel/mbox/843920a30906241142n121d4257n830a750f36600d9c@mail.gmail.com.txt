FROM: Nigel <nigelspl...@gmail.com>
SUBJECT: Re: Analyzing performance and memory consumption for boolean queries
DATE: 24 Jun 2009

Thanks Otis -- I'll give that a try.  I think this relates to the first
question in my original message, which was what (if any) of the inverted
index structure is explicitly cached by Lucene in the JVM.  Clearly there's
something, since a large JVM heap is required to avoid running out of
memory, but it can't be everything, otherwise OS caching would have no
effect.

Thanks,
Chris

On Tue, Jun 23, 2009 at 11:16 PM, Otis Gospodnetic <
otis_gospodnetic@yahoo.com> wrote:

>
> Nigel,
>
> Based on the description, I'd suspect unnecessarily(?) large JVM heap and
> insufficient RAM for caching the actual index.  Run vmstat while querying
> the index and watch columns: bi, bo, si, so, wa, and id. :)  If what I said
> above is correct, then you should see more data loaded from disk during
> those clow queries and probably a jump in the wa column if you are running
> multiple concurrent queries.
>
>  Otis
> --
> Sematext -- http://sematext.com/ -- Lucene - Solr - Nutch
>

