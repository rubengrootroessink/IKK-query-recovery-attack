FROM: Nigel <nigelspl...@gmail.com>
SUBJECT: Re: Analyzing performance and memory consumption for boolean queries
DATE: 24 Jun 2009

Hi Uwe,

Good points, thank you.  The obvious place where GC really has to work hard
is when index changes are rsync'd over and we have to open the new index and
close the old one.  Our slow performance times don't seem to be directly
correlated with the index rotation, but maybe it just appears that way,
since it may take a little while before GC kicks in to try to recover the
objects used by the closed index.

Chris

On Wed, Jun 24, 2009 at 3:33 AM, Uwe Schindler <uwe@thetaphi.de> wrote:

> I had similar problems with our configuration, too. Suddenly sometimes the
> server even did not respond. The problem was (I think is the same here):
> the
> GC. The standard Java GC is not multithreaded, so if you have lots of
> traffic at some time, the JVM halts all threads and starts to GC, which can
> take very long time with so big heap sizes.
>
> On our server with indexes of similar disk space size (not documents), I
> changed the JVM options to use:
>
> -Xms4096M -Xmx8192M -XX:MaxPermSize=512M -Xrs -XX:+UseConcMarkSweepGC
> -XX:+UseParNewGC -verbosegc -XX:+PrintGCDetails -XX:+UseLargePages
>
>

