FROM: "Marcel Morisse" <Marcel.Mori...@jobsintime.de>
SUBJECT: modifier.optimize() causes Java heap space (OutOfMemoryException)
DATE: 24 Jan 2007

Hey,

I have a problem with Lucene and because I am little bit inexperienced,
I would like to ask you.

I have a database with ca. 2500 items in it. I store these items in a
RAMIndex and try to rebuild it every 10 minutes. I use the same
procedure like updating a FSDirectory - deleting and adding again.

Everything works fine for the first time, but after 30 minutes the
method IndexModifier.optimize() causes a OutofMemoryException: Java heap
space

I tried to increase the java heap space, which is probably not the best
solution. So the exception waits a little bit longer (let's say 60
minutes), but then returns always during rebuilding.

So my questions: Is it possible to rebuild a RAMIndex in the same way
like a FSDirectory and if it so, do I have to pay regard to something?

I am using Lucene nightly build 2007-01-09 with a 512 MB RAM PC.

Thanks for any help


++++++++++
protected synchronized void rebuildRAMIndex() {
 IndexModifier modifier = new IndexModifier(_directory,_analyzer,false);
    			    			
    			int count = countAllObjects();
		        int maxResults = 100;
		        Document doc = new Document();
		        // load maxResults from Database
		        for (int firstResult = 0; firstResult < count;
firstResult += maxResults) {
		  // get the items from a database with the method
findAllObjects
		 for (Iterator it = findAllObjects(firstResult,
maxResults)
		                 .iterator(); it.hasNext();){
             //convert the database items to Lucene Documents

		 doc = convertToDocument(it.next());
		 try{
     		 modifier.deleteDocuments(new Term("id",
doc.get("id")));	            
           	 }
           	 catch (Exception ignore)
           	 {
           	 }
           	 try{
             modifier.addDocument(doc);		            
           	 }
           	 catch (Exception ignore)
           	 {
          	 }	
}    
}
modifier.optimize();
modifier.close(); 
}
+++++++

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


