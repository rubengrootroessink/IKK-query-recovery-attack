FROM: Stanislav Jordanov <ste...@sirma.bg>
SUBJECT: Re: Querying performance decrease in 1.9.1 and 2.0.0
DATE: 21 Nov 2006

Switch to the old scorer (via BooleanQuery.setUseScorer14(true) )
solved the performance issue - now Lucene 1.9.1 & 2.0.0 perform on the 
same load test just as 1.4.3 does

Thanks a lot Yonik!

Any chance there exists a non-professional explanation what's the 
difference between old and new boolean scorers?

Cheers,
Stenly

Yonik Seeley wrote:
> On 11/21/06, Stanislav Jordanov <stenly@sirma.bg> wrote:
>> We've identified a significant querying performance decrease after
>> switching from Lucene 1.4.3 to 1.9.1.
>> It is steadily demonstrated no mater if the concurrent querying threads
>> are 1, 2, 4 or 8 (or even more) -
>> If N queries are executed against 1.9.1 for a given time, then 1.4.3
>> executes approx. 1.5 * N queries for the same time.
>> Lucene 2.0.0 behaves just like 1.9.1 in terms of querying performance.
>>
>> Any idea what may be causing this behavior?
>
> BooleanScorer changed to BooleanScorer2, which can be faster or slower
> depending on the nature of the queries.  There has been some
> performance work lately in the trunk... you could try the latest
> nightly builds to see if it improves things for you.
>
> You could also verify that it's only the BooleanScorer by trying to
> use the old scorer with the new code via
> BooleanQuery.setUseScorer14(true)
>
>
> -Yonik
> http://incubator.apache.org/solr Solr, the open-source Lucene search 
> server
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


