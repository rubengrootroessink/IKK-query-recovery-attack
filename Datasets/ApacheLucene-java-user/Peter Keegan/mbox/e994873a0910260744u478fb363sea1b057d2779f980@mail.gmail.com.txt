FROM: Peter Keegan <peterlkee...@gmail.com>
SUBJECT: Re: IO exception during merge/optimize
DATE: 26 Oct 2009

Even running in console mode, the exception is difficult to interpret.
Here's an exception that I think occurred during an add document, commit or
close:
doc counts differ for segment _g: field Reader shows 137 but segmentInfo
shows 5777
I ensured that the disk space was low before updating the index.

On another occasion, the exception was:
background merge hit exception: _0:C1080260 _1:C139 _2:C123 _3:C107 _4:C126
_5:C121 _6:C126 _7:C711 _8:C116 into _9 [optimize] [mergeDocStores]
And the accompanying stack trace was:
java.io.IOException: read past EOF
        at
org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:151)
        at
org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:38)
        at org.apache.lucene.store.IndexInput.readInt(IndexInput.java:70)
        at
org.apache.lucene.index.FieldsReader.<init>(FieldsReader.java:110)
        at
org.apache.lucene.index.SegmentReader$CoreReaders.openDocStores(SegmentReader.java:277)
        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:640)
        at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:608)
        at
org.apache.lucene.index.IndexWriter$ReaderPool.get(IndexWriter.java:679)
        at
org.apache.lucene.index.IndexWriter.mergeMiddle(IndexWriter.java:4961)
        at org.apache.lucene.index.IndexWriter.merge(IndexWriter.java:4596)
        at
org.apache.lucene.index.IndexWriter.resolveExternalSegments(IndexWriter.java:3786)
        at
org.apache.lucene.index.IndexWriter.addIndexesNoOptimize(IndexWriter.java:3695)

I guess this is just the nature of a low disk space condition on Windows. I
expected to see a 'no space left on device' IO exception.

Peter

On Sun, Oct 25, 2009 at 8:54 PM, Peter Keegan <peterlkeegan@gmail.com>wrote:

> The environment involves a lot of I/O from merge/optimize operations on
> multiple indexes (shards) on one server.
> I will try running the indexers in console mode, where I would expect to
> see all errors and exceptions.
>
> Peter
>
>
>
> On Sun, Oct 25, 2009 at 8:40 PM, Michael McCandless <
> lucene@mikemccandless.com> wrote:
>
>> Hmm, if you got no exception whatsoever, something more fundamental
>> seems to be wrong w/ the error reporting when running as a windows
>> service.  Maybe make a simple Java test program that throws an
>> exception and try to get that working?
>>
>> Mike
>>
>> On Sun, Oct 25, 2009 at 7:35 PM, Peter Keegan <peterlkeegan@gmail.com>
>> wrote:
>> >>Did you get any traceback printed at all?
>> > no, only what I reported.
>> >
>> >>Did you see any BG thread exceptions on wherever your System.err is
>> > directed to?
>> > The jvm was running as a windows service, so output to System.err may
>> have
>> > gone to the bit bucket.
>> > That's an interesting point, though.
>> >
>> > Peter
>> >
>> >
>> > On Sun, Oct 25, 2009 at 8:47 AM, Michael McCandless <
>> > lucene@mikemccandless.com> wrote:
>> >
>> >> Hmm... Lucene tries to catch the original cause (from the BG thread
>> >> doing the merge) and forward it to the main thread waiting for
>> >> optimize to complete.
>> >>
>> >> Did you get any traceback printed at all?  It should include one
>> >> traceback into Lucene's optimized method, and then another (under
>> >> "caused by") showing the exception from the BG merge thread.
>> >>
>> >> Did you see any BG thread exceptions on wherever your System.err is
>> >> directed to?
>> >>
>> >> Mike
>> >>
>> >> On Sat, Oct 24, 2009 at 5:21 PM, Peter Keegan <peterlkeegan@gmail.com>
>> >> wrote:
>> >> > btw, this is with Lucene 2.9
>> >> >
>> >> > On Sat, Oct 24, 2009 at 5:20 PM, Peter Keegan <
>> peterlkeegan@gmail.com
>> >> >wrote:
>> >> >
>> >> >> I'm sometimes seeing the following exception from an operation
that
>> does
>> >> a
>> >> >> merge and optimize:
>> >> >>  java.io.IOException: background merge hit exception: _0:C1082866
>> _1:C79
>> >> >> into _2 [optimize] [mergeDocStores]
>> >> >> I'm pretty sure that it's caused by a temporary low disk space
>> >> condition,
>> >> >> but I'd like to be able to confirm this. It would be nice to have
>> the
>> >> java
>> >> >> exception included in the Lucene exception. Any way to get this?
>> >> >>
>> >> >> Peter
>> >> >>
>> >> >>
>> >> >
>> >>
>> >> ---------------------------------------------------------------------
>> >> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>> >> For additional commands, e-mail: java-user-help@lucene.apache.org
>> >>
>> >>
>> >
>>
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>> For additional commands, e-mail: java-user-help@lucene.apache.org
>>
>>
>

