FROM: Peter Keegan <peterlkee...@gmail.com>
SUBJECT: Re: queryNorm affect on score
DATE: 28 Feb 2009

> in situations where you  deal with simple query types, and matching query
structures, the queryNorm
> *can* be used to make scores semi-comparable.

Hmm. My example used matching query structures. The only difference was a
single term in a field with zero weight that didn't exist in the matching
document. But one score was 3X the other.

Peter

On Sat, Feb 28, 2009 at 12:35 PM, Chris Hostetter
<hossman_lucene@fucit.org>wrote:

>
> : I guess I don't really understand this comment in the similarity java doc
> : then:
> :
> :
> http://lucene.apache.org/java/2_4_0/api/org/apache/lucene/search/Similarity.html#formula_queryNorm
> :
> : *queryNorm(q) * is a normalizing factor used to make scores between
> queries
> : comparable.
>
> that comment should probably be removed ... in situations where you
> deal with simple query types, and matching query structures, the queryNorm
> *can* be used to make scores semi-comparable.
>
> To be 100% correct about what the queryNorm does in all cases: it
> normalizes each of the constituent values that are used in the score
> computation relative to the other constituent values.  the main value I've
> seen from it is that it prevents a loss of floating point accuracy that
> can result from addition/multiplication of large values.
>
>
>
> -Hoss
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

