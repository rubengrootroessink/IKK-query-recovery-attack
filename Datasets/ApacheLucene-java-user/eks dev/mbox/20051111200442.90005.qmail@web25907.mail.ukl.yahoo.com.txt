FROM: eks dev <eks...@yahoo.co.uk>
SUBJECT: Re: A lot of short documents, optimal query?
DATE: 11 Nov 2005


Everything is perfect with your suggestion, scoring is
not needed. I am going to try all also approach with
ChainedFilter, but for this I need to think a bit more
on how to get it right. The Query in the example is
just one variation on the same topic and there are a
few more cases I need to cover (thanks to your
suggestions, I see now clean way to avoid scoring). 

Now a view from 10k miles, pls correct me if I am
wrong .

Filters are somehow "paralel world" to the complete
"normal" Query (PrefixQuery, TermQuery...) world that
evades scoring overhead, and ChainedFilter combines
them together. One could say "kind of BooleanQuery
without scoring"

Wouldn't it make sense to have BooleanFilter,
TermFilter, MultiTermFilter, RangeFilter... fammily to
"mirror"  xxxQuery world with same idioms and
interfaces? Is this the direction allready taken in
Lucene development (an alternative would be to
parametrize existiong Query world). How I see it
functionaly, at a moment filters (and thir
combination) are the only way to use fast "pure
boolean" model.

Does this what I just said makes any sense?



	
	
		
___________________________________________________________ 
Yahoo! Messenger - NEW crystal clear PC to PC calling worldwide with voicemail http://uk.messenger.yahoo.com

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


