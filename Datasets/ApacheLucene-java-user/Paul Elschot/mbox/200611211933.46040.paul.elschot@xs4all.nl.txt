FROM: Paul Elschot <paul.elsc...@xs4all.nl>
SUBJECT: Re: Querying performance decrease in 1.9.1 and 2.0.0
DATE: 21 Nov 2006

Stanislav,

Could you also try a nightly build to test the later performance improvement
on BooleanScorer2?  The nightly builds are here:
http://people.apache.org/builds/lucene/java/nightly/
The jar is called lucene-core-nightly.jar in the .tar.gz build.

It's not likely that this is faster than the 1.4 BooleanScorer, 
but one never knows.

Regards,
Paul Elschot


On Tuesday 21 November 2006 17:59, Yonik Seeley wrote:
> On 11/21/06, Stanislav Jordanov <stenly@sirma.bg> wrote:
> > Switch to the old scorer (via BooleanQuery.setUseScorer14(true) )
> > solved the performance issue - now Lucene 1.9.1 & 2.0.0 perform on the
> > same load test just as 1.4.3 does
> >
> > Thanks a lot Yonik!
> >
> > Any chance there exists a non-professional explanation what's the
> > difference between old and new boolean scorers?
> 
> The original BooleanScorer was a bucket-based scorer that could
> deliver docs out of order and thus restricted how it could be used.
> It also had a limitation of 32 required or prohibited clauses (because
> of an int bitmask).
> 
> BooleanScorer2 removes these limitations, and uses skipTo() where
> applicable on sub-scorers.
> 
> -Yonik
> http://incubator.apache.org/solr Solr, the open-source Lucene search server
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
> 
> 
> 

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


