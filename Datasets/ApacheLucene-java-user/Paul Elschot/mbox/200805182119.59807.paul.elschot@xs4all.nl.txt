FROM: Paul Elschot <paul.elsc...@xs4all.nl>
SUBJECT: Re: MultiTerm Or Query with per-term boost. Does it exist?
DATE: 18 May 2008

See below.

Op Sunday 18 May 2008 21:03:19 schreef John Jensen:
> The only problem is, that I'm thinking that a special purpose Query
> subclass might be faster, but I was wondering if others have run into
> similar situations, and whether they saw performance win by replacing
> complex BooleanQueries with a special purpose Query subclass.
>
> Unfortunately the boosts are query specific and can't be done at
> index time.
>
> Thanks,
>   John
>
> On Sun, May 18, 2008 at 9:30 AM, Karl Wettin <karl.wettin@gmail.com> 
wrote:
> > 18 maj 2008 kl. 02.25 skrev John Jensen:
> >> Hi,
> >>
> >> I have an application where I need to issue queries with a large
> >> number of or-terms with individual boosts.
> >>
> >> Currently I just construct a BooleanQuery with a large number
> >> (often 1000) of constituent TermQueries. I'm wondering if there is
> >> a better way to do this?
> >> I'm open to implementing my own Query subclass if I can expect
> >> significant performance improvements from doing this.

Does BooleanQuery.setAllowDocsOutOfOrder() make a difference?

Regards,
Paul Elschot


> >
> > What is the general problem with your approach? And what does all
> > these boosted term queries represent?
> >
> > Would it be perhaps be possible for you to add the boost at index
> > time instead of at query time?
> >
> >
> >     karl
> >
> >
> >
> > -------------------------------------------------------------------
> >-- To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> > For additional commands, e-mail: java-user-help@lucene.apache.org



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


