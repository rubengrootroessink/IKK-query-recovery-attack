FROM: Paul Elschot <paul.elsc...@xs4all.nl>
SUBJECT: Re: Proximity Query Parser
DATE: 1 Sep 2006

On Friday 01 September 2006 12:54, Mark Miller wrote:

> Hi Paul,
> 
> I also have to treat things differently depending on if I am in a 
> proximity clause or boolean clause. A wildcard in a boolean is mapped to 
> a wildcard query. A wildcard in a proximity is mapped to a regex span 
> that has been modified to only deal with * and ?. When I run into a 
> proximity, I collect a small tree of each clause and distribute them 
> against each other...(old | map) ~3 big gets distributed to old ~3 big | 
> map ~3 big. This distribution method appears to handle all 

There is no need to repeat "big". SpanQueries can be nested,
so when mapping like this:
SpanNear(SpanOr( old, map), big)
the query structure will only grow for truncations and fuzzy stuff.

> boolean/proximity nesting/mixing cases for me, including: great ! "big 
> old phrase search" ~5 (holy ~4 (big black bear)). The distribution 
> maintains order of operations, but also obviously can create some pretty 
> large queries.

Regards,
Paul Elschot

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


