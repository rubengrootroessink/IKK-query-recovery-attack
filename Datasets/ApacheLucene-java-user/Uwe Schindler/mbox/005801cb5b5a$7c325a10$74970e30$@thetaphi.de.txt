FROM: "Uwe Schindler" <...@thetaphi.de>
SUBJECT: RE: Problem with Numeric range query.
DATE: 23 Sep 2010

Hi,

Can you provide some self-containing testcase that shows your problem? In
most cases those problems are caused by not committing changes to
IndexWriter before opening the IndexReader.

Additionally, if you only want to look for exactly one timestamp (like a
TermQuery), use a NumericRangeQuery with upper+lower inclusive = true and
use the specific value to search for as both upper and lower.

You may also hit a bug, that's already solved in SVN (it happens when the
lower bound is near Long.MAX_VALUE or the upper bound near Long.MIN_VALUE):
https://issues.apache.org/jira/browse/LUCENE-2541

Uwe

-----
Uwe Schindler
H.-H.-Meier-Allee 63, D-28213 Bremen
http://www.thetaphi.de
eMail: uwe@thetaphi.de


> -----Original Message-----
> From: Daniel Sanders [mailto:dsanders@novell.com]
> Sent: Thursday, September 23, 2010 12:23 PM
> To: java-user@lucene.apache.org
> Subject: Problem with Numeric range query.
> 
> 
> I have a set of documents that all have a "timestamp" field which is
stored as a
> long integer number. The field is indexed in my Lucene index as a number
> using NumericField with a precision step of 8:
> 
>    Field field = new NumericField("timestamp", 8);
>    field.setLongValue( timestampValue);
> 
> I do this so I can do numeric range queries to retrieve all documents that
fall
> within a specific time range.
> 
> The query I construct has two parts to it, a query, and a filter. I get
the
> document hits as follows:
> 
>    IndexReader reader = ...... some index reader.....
>    IndexSearcher searcher = new IndexSearcher(reader);
> 
>    Filter filter = NumericRangeFilter.newLongRange("timestamp", 8,
startTime,
> endTime, false, true);
>    Query query = new MatchAllDocsQuery();
>    searcher.search( query, filter, myCollector); // My collector is a
super class of
> Collector - saves all Hits
> 
> Occasionally, I have a single document with a very specific timestamp I
want to
> retrieve. Suppose that timestamp is timeX, I will create the filter as
follows:
> 
>    Filter filter = NumericRangeFilter.newLongRange("timestamp", 8,
timeX-1,
> timeX, false, true);
> 
> But with this filter, the document that should be found is never found. I
have
> even tried expanding the time range as follows, but with no success:
> 
>    Filter filter = NumericRangeFilter.newLongRange("timestamp", 8,
timeX-1,
> timeX+500, false, true);
> 
> Strangely, a filter that should NOT have found the document actually did
find
> the document:
> 
>    Filter filter = NumericRangeFilter.newLongRange("timestamp", 8, timeX,
> timeX+1000, false, true);
> 
> This filter should NOT have found the document since the minInclusive
> argument is false.
> 
> I have also noticed that sometimes when I have several documents with
exactly
> the same timestamp, a query will return some, but not all, of the
documents.
> 
> I have also tried to use a NumericRangeQuery as follows:
> 
>    Query query = NumericRangeQuery.newLongRange("timestamp", 8, timeX-1,
> timeX, false, true);
>    searcher.search( query, null, myCollector);
> 
> This also fails to return my document(s).
> 
> Am I doing something wrong here? Have I misunderstood how this is supposed
> to work? Has anyone else had problems like this?
> 
> 
> Thanks for any help or guidance or tips you can give me,
> 
> -Daniel Sanders


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


