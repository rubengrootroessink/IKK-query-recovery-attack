FROM: "Uwe Schindler" <...@thetaphi.de>
SUBJECT: RE: Best Practice for Lucene Search
DATE: 30 Jan 2009

We do it in the same way. We have our RDBMS for administer our
metadata/data. The search frontend for end users works completely with
Lucene/panFMP (www.pangaea.de). We marshal all our relational data to XML
files and index their contents using lucene. But the XML file is also stored
in lucene as stored field. The search results are displayed to end user
using the hits from lucene together with the stored XML content (using XSL).
This is very much faster and better decoupled from the database.

Uwe

-----
Uwe Schindler
H.-H.-Meier-Allee 63, D-28213 Bremen
http://www.thetaphi.de
eMail: uwe@thetaphi.de


> -----Original Message-----
> From: Ian Lea [mailto:ian.lea@gmail.com]
> Sent: Friday, January 30, 2009 4:57 PM
> To: java-user@lucene.apache.org
> Subject: Re: Best Practice for Lucene Search
> 
> That answer is fine, but there are others.  We store denormalized data
> in lucene, as you are doing, for display on web pages because we can
> get it out of lucene much faster then we can get it out of the various
> tables in the database.  The database is not as fast as it might be,
> quite possibly slower than yours.  And yes, there is overhead in terms
> of space and time in having 2 copies of the data but space is cheap
> and there aren't that many writes and they happen offline so we don't
> really care if they take a bit longer.  We don't store everything in
> lucene by any means - just what is returned for product searches.
> 
> Overall I don't think there is a single best practice recommendation.
> As so often, it depends on your setup, requirements and preferences.
> 
> 
> --
> Ian.
> 
> 
> On Fri, Jan 30, 2009 at 3:13 PM, Nilesh Thatte <nileshthatte@yahoo.com>
> wrote:
> > Hello
> >
> > I would store normalised data in MySQL and index only searchable content
> in Lucene.
> >
> > Regards
> > Nilesh
> >
> >
> >
> >
> >
> >
> > ________________________________
> > From: ilwes <onetime@mailinator.com>
> > To: java-user@lucene.apache.org
> > Sent: Friday, 30 January, 2009 15:08:10
> > Subject: Best Practice for Lucene Search
> >
> >
> > Hello,
> >
> > I googled, searched this Forum and read the manual, but I'm not sure
> what
> > would be the best practice for Lucene search.
> >
> > I have an e-Commerce application with about 10 mySQL tables for my
> products.
> > And I have an Index (which is working fine), with about 10 fields for
> every
> > product. Is it a common way having the same data (title, description,
> tags,
> > paths to pictures, sold_counter..etc) redundant in my mySQL DB and in
> the
> > Index? And everytime I add a product, saving it to both? Would it not
> reduce
> > the performance doing always things twice?
> >
> > What would be the best practice?
> > 1) Save it to both index and mySQL DB (as I'm doing right now).
> > 2) Save only searchable fields (title, description and tags) and an
> > product_id to index and use product_id to query everything else from DB?
> > 3) ..?
> >
> > Would be thankful for some hints and your experience.
> >
> > Thx,
> > ilwes
> >
> > p.s. btw. im working with Zend/PHP but this shouldn't have any impact on
> > this question
> > --
> > View this message in context: http://www.nabble.com/Best-Practice-for-
> Lucene-Search-tp21748839p21748839.html
> > Sent from the Lucene - Java Users mailing list archive at Nabble.com.
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


