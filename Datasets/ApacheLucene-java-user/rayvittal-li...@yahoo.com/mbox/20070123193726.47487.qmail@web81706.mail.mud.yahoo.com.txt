FROM: rayvittal-li...@yahoo.com
SUBJECT: Extending scoring to eliminate sorting on timestamp
DATE: 23 Jan 2007

For various reasons, we'd like to eliminate the sort step.
Our current query interface takes a start time and end time as an input range:
              RangeFilter rf = new RangeFilter("day", start, end, true, true);
            hits = searcher.search(query,rf,new Sort(new SortField[]{
                    new SortField("timestamp",SortField.STRING,true)}));

The idea is to stuff the start and end into the query object. During scoring, documents closer
in timestamp to the start should score higher (exact match to the start time should score
the highest). 
Where would I start ?
 -- Extend (subclass ) BooleanQuery ?
 -- Extend  BooleanScorer2 ?
 -- Extend DefaultSimilarity ?

How do I get a score the timestamp field in the same range (normalized) as the term score?
What precision can I get given that the timestamps are in milliseconds since 1970 ? That is,
Jan 23, 12:00:00:000 should score higher than Jan 23, 12:00:00:001 

Thanks
--
solidguy




---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


