FROM: Andrzej Bialecki ...@getopt.org>
SUBJECT: Re: Lucene performance bottlenecks
DATE: 7 Dec 2005

Yonik Seeley wrote:

>>if (b>0) return b;
>>Doing an 'and' of two bytes and checking if the result is 0 probably
>>requires masking operations on >8 bit processors...
>>    
>>
>
>Sometimes you can get a peek into how a JVM would optimize things by
>looking at the asm output of the code from a C compiler.
>Both (b>=0) and ((b&0x80)!=0) generated the exact same asm in gcc:
>
>        testb   %al, %al
>        js      L4
>  
>

It's nice to have these couple percent... however, it doesn't solve the 
main problem; I need 50 or more percent increase... :-) and I suspect 
this can be achieved only by some radical changes in the way Nutch uses 
Lucene. It seems the default query structure is too complex to get a 
decent performance.

-- 
Best regards,
Andrzej Bialecki     <><
 ___. ___ ___ ___ _ _   __________________________________
[__ || __|__/|__||\/|  Information Retrieval, Semantic Web
___|||__||  \|  ||  |  Embedded Unix, System Integration
http://www.sigram.com  Contact: info at sigram dot com



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


