FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: search-time boosting
DATE: 3 Apr 2007

I don't think index time boosts are the way to go. From a message on
this list that I printed out (from Otis? Yonik? Chris? someone who
knows waaaay more about this topic than I do, probably Chris given
the lack of capitalization <G>)....

'...index time field boosts are a way to express things like
"this documents title is worth twice as much as the title of most
documents" query time boosts are a way to express "i care about
matches on this clause of my query twice as much as i do
about matches to other clauses of my query"...'

So I don't think that index time boosts express what Ofer wants...

Erick

On 4/3/07, Daniel Rosher <rosherd@googlemail.com> wrote:
>
> Hi Ofer,
>
> I think your best option is to boost the field for your category field
> during index time with Field.setBoost(floatBoost)
>
> You will have to reindex your corpus however.
>
> Regards,
> Dan
>
> On 4/2/07, Ofer Nave <ofer@smarter.com> wrote:
> >
> > I'd like to be able to boost documents at search-time, and I'm not sure
> > how to do it.
> >
> > Example:
> >
> > I'm building a search engine for products (comparison shopping).  Many
> > queries tend to indicate a category (i.e., 'digital cameras') as opposed
> > to a product (i.e., 'canon powershot').  I have the name of the category
> > the product is in indexed in a separate field.  My intention was to
> > query both the title field and the category field, and when the category
> > field relevancy is extremely high, boost the documents in that category.
> >
> > Is there a way to do this?  Or an alternative approach to the problem?
> >
> > -ofer
> >
> > ---------------------------------------------------------------------
> > To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> > For additional commands, e-mail: java-user-help@lucene.apache.org
> >
> >
>

