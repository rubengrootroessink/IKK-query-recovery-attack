FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: Lucene with Simple Database
DATE: 19 Jul 2006

Well, it depends. Are you having performance problems with a database
solution? If not, why in the world would you want to introduce another layer
of complexity?

Personally, while I think Lucene is great, I wouldn't recommend it in the
situation you describe unless you are having problems with the database
solution. 10,000 records shouldn't make any reasonable database even start
to breathe hard, unless you're using it in ways that don't readily come to
my mind.

And if you are having performance issues, the first thing I'd do is look at
making my database use more efficient.

This assumes you *need* a database. If you are just searching records (and
not joining across tables etc.), then you might think about forgetting the
database all together and just using Lucene.

But I can't stress enough that introducing solution that requires both a DB
and Lucene just to be "more efficient" is a bad idea. It's may be a good
thing if you are solving a real problem, but not an abstract "it would just
be better" problem. And in either case, a dual solution shouldn't be
approached until after you've made sure your problem is not just mis-use of
the tool you're using.

Best
Erick

