FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: Index: mixing the structure of persistence
DATE: 25 Nov 2007

As I understand, Lucene does a fair amount of caching of terms in
memory without you having to specify anything.

But it's hard to see how your question relates. Remember that Lucene is
finding *all* matching docs. So searching in a RAMdirectory and then
searching in the file doesn't really seem possible since Lucene has to
search
the entire index every time to score the docs. It doesn't stop after
the first hit, since the next hit may score higher.

But I'm sure Lucene *does* cache portions of the index in RAM when
possible, but I've never had occasion to dig into the details.

Which leads me to ask "Why do you care?". Is there a specific
situation you're trying to get better performance from or is this more
of a background question? If you have a specific situation, please describe
it in some detail so better minds than mine can give you a better
response <G>....

Best
Erick

On Nov 24, 2007 10:26 AM, Haroldo Nascimento <haroldo.araras@gmail.com>
wrote:

> Hi,
>
>  I have a question ?
>
>  Lucene offers a mixing structure of storage of index, that is, first
> do search in memoria (ARMDirectory) and in case of not found do search
> in index file automatically ? For example: Load part of index in
> memory for do the search fastest.
>
>  Thnaks
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

