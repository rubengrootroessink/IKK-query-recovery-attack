FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: Searching documents on big index by using ParallelMultiSearcher is slow...
DATE: 3 Oct 2006

Well, the first question is always "are you opening/closing your
IndexSearchers for each request on your remote machines?". This is always a
no-no. This is also a question for your single-searcher version.

What is your performance if you only go to one server? I'd start by finding
out what happens when you forget all the ParallelMultiSearcher stuff, all
the RMI stuff etc, and just see what your performance is on one of your
index parts locally. Once that is answered, extend to RMI, then the
Parallel...., at each step seeing if your performance degrades unacceptably.
That'll at least give you a clue what part of the process is the biggest
problem.

And without knowing a LOT more about your searches, and your index, it's
kind of hard to come up with solutions <G>....

Best
Erick

On 10/3/06, Scott <m.scott.tiger@gmail.com> wrote:
>
> Hi,
>
> I have a question about ParallelMultiSearcher performance.
>
> I want to search documents on about 10 gigabytes of index.
> (The index has 10,000,000 documents.)
>
> I get very slow performance using IndexSearcher with ONE index normally.
> Then I tried to use ParallelMultiSearcher with 10 servers of remote
> searchable.
>
> Index:
> Each search slaves have 1/10 of index.
> (ONE index divided to 10 servers.)
>
> Search slave:
> Each search slaves start remote searchable RMI server,
> and wait connecting from search master.
>
> Search master:
> The search master use Naming.lookup() to get remote searchable.
> Get 10 remote searchables from each search slaves and build
> ParallelMultiSearcher.
> Then search.
>
> Any solution?
>
> --
> Scott
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

