FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: Using Lucene as compressed DB
DATE: 13 Jun 2007

Be very clear what you want Lucene to do. What your database
schema is and whether the columns are indexable is totally
irrelevant to your Lucene index. What is relevant is how you
construct your lucene index to solve the underlying problem.
Of course, the underlying problem may be reflected in your
database design, but that's coincidental only to the final
Lucene index.

If you find yourself trying to do database-like operations on
your Lucene index (joins), step back and re-examine your
assumptions <G>...

Best
Erick

On 6/13/07, Sammpathkumar, C <sammpathkumar.c@nsn.com> wrote:
>
> Hi,
>
> I am looking for a in memory Database which needs high speed search
> capability as well as should compress the data stored.
> Currently have only one table with two columns only in my design.
>
> Can we trick Lucene to use it for the above purpose?
>
> I am thinking something like:
> - Create a initial index (stored in-memory) of empty database using
> lucene.
> - Route all MAD requests to lucene so that lucene updates its indices
> but there is no real database exists.
> - Make search request only on index created by lucene.
>
> In my database schema, both the columns are marked as indexable fields.
>
> My questions:
> - Is this really possible with Lucene design?
> - If possible what is the impact on performance creating the indexes and
> searching in the index files only?
> - Or do you feel this is absurd and I should look into a different tool
> (suggestions?)
>
> Thanks and Regards,
> Sammpath
>
>
>
> Disclaimer:
> This e-mail may contain trade secrets or privileged, undisclosed or
> otherwise confidential information. If you have received this e-mail in
> error, you are hereby notified that any review, copying or distribution of
> it is strictly prohibited. Please inform us immediately and destroy the
> original transmittal. Thank you for your cooperation.
>

