FROM: Erick Erickson <erickerick...@gmail.com>
SUBJECT: Re: Multiple indexes vs single index
DATE: 14 Feb 2009

Define efficiency. Define document. Define user. Define....

This kind of question is unanswerable except in gross
generalities unless you take the time to provide details.

You get one answer if each document is 1K, another if it's
1G. If you have 2 users or 10,000 users. If you require
100 queries/sec response time or 1 query can take 10
seconds. If you require an update to the index every
second or month...


That said, I'd try one index first and run some performance
measurements. See the Wiki for performance tuning issues.

You have two problems with maintaining one index/user.
1> Trying to maintain N indexes is much harder than one,
     especially when you factor in backups, etc.
2> There is a cost to opening an index. If you look at the
     Wiki you'll see that the recommendation is that you
     open an index, and run a few warmup queries to fill
     caches etc. before, for instance, measuring performance.
     So if you maintain an index/user, how do you expect
     to handle this issue?


Best
Erick



On Sat, Feb 14, 2009 at 8:26 AM, <spring@gmx.eu> wrote:

> Hi,
>
> We have have an application which manages the data of multiple customers.
> A customer can only search its own data, never the data of other customers.
>
> So what is more efficent in respect of performance and resources:
>
> One big single index filtered by an index field (customer-Id) or multiple
> smaller indexes, one per customer?
>
> I think there will be 10 million docs max. for all customers together.
>
> Thank you
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

