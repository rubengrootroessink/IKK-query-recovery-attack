FROM: "Erick Erickson" <erickerick...@gmail.com>
SUBJECT: Re: Boosting Vs Sorting
DATE: 21 Dec 2007

>From my perspective, index-time boosting and sorting are apples
and oranges.

According to a post from Hoss, index-time boosting is a way of
saying that "Field x in this document is more important than
field x in other documents". Query-time boosts are a way of
saying "I care about field X more than field Y across *all*
documents".

So index time boosting doesn't seem to relate to your problem since
you really want to compare field x across all documents. It seems
that query-time boosting is more relevant.

So, leaving aside how you form your "similar" q

On Dec 20, 2007 10:50 PM, Rakesh Shete <rakesh_shete@hotmail.com> wrote:

>
> Hi all,
>
> I am using Hibernate Search (http://www.hibernate.org/410.html) which is a
> wrapper around Lucene for performing search over info stored in the DB. I
> have questions related to Lucene boosting Vs sorting:
>
> Is index time boosting of documents and fields better than specifying
> sorting parameters at search time?
>
> I have been browsing through the Lucene mail archives for an answer to
> this. Going through them and reading on stuff related to Lucene scoring, my
> understanding is that if I know upfront at index time that the relevance
> order of results is based on certain fields, then, it is better to have
> index time boosting of documents and fields. Am I right here?
>
> My requirements are like:
> Results having an exact match to the input query string should have
> highest preference followed by an exact match with field1, field2, field3
> and then followed by search query substring (or near match) match with
> field1, field2, field3.
>
> Any suggestions are most welcome.
>
> --Rakesh S
>
> _________________________________________________________________
> Post free property ads on Yello Classifieds now! www.yello.in
> http://ss1.richmedia.in/recurl.asp?pid=219

