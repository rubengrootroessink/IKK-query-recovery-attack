FROM: Erick Erickson <erickerick...@gmail.com>
SUBJECT: Re: Highlight Wildcard Queries: Scores
DATE: 26 Jan 2011

It is, I think, a legitimate question to ask whether scoring is worthwhile
on wildcards. That is,
does it really improve the user experience? Because the MaxBooleanClause
gets tripped
pretty quickly if you add the terms back in, so you'd have to deal with
that.

Would your users be satisfied with sorting in the case of only searching on
wildcard characters
by, say, dates or titles or subjects or.....?

Then just let the scoring work on fields that aren't wildcarded...

This may not be reasonable in your particular case, but it's worth
considering before assuming that
scoring is necessary on wildcard terms.

Best
Erick

On Wed, Jan 26, 2011 at 9:10 AM, Wulf Berschin <berschin@dosco.de> wrote:

> Now I have the highlighted wildcards but obviously the scoring is lost. I
> see that a rewrite of the wildcard query produces a constant score query. I
> added
>
> setMultiTermRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);
>
> to my QueryParser instance but no effect. What's to be done now?
>
> Wulf
>
>
>
> Am 26.01.2011 11:06, schrieb Wulf Berschin:
>
>> Thank you Alexander and Uwe, for your help.
>>
>> I read Marks explanation but it seems to me that his changes are not
>> contained in Lucene-3.0.3.
>>
>> So I commented out the rewrite, changed QueryTermScorer back to
>> QueryScorer and now I got the wildcard queries highlighted again.
>>
>> Wulf
>>
>>
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>> For additional commands, e-mail: java-user-help@lucene.apache.org
>>
>>
>>
>>
>>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

