FROM: Justin <cry...@yahoo.com>
SUBJECT: 2-pass scoring of top docs
DATE: 3 Mar 2010

I've looked at this for a couple days and hope someone can offer suggestions...

In the past, we overrode Scorer::score(Collector), called super.score(Collector), called Collector.topDocs(),
adjusted the scores for a portion of the top docs, then ran Collector.collect(int) to collect
based on the new scores before returning from Scorer::score(Collector).

Now, it appears that a Collector object cannot be reused in the same way.  TopScoreDocCollector.pqTop
is set the first time through, affecting how subsequent documents are collected.  I'd use
a temporary collector, but there is no clone method and no get methods for the necessary constructor
parameters (e.g. number of documents to collect).

Does anyone have a suggestion for "2-pass scoring" of top docs?

Thanks,
Justin


      

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


