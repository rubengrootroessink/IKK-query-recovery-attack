FROM: Dawid Weiss <dawid.we...@gmail.com>
SUBJECT: Re: Autocompletion on large index
DATE: 7 Jul 2011

You can actually make an (relatively easy) change to FSTLookup to
allow infix matches (or word-boundary matches). This should have
little impact on memory and nearly zero on performance. This issue is
tracking this:

https://issues.apache.org/jira/browse/SOLR-2479

I should have implemented it a while ago, but I've been swamped with
other work, sorry.

Dawid

On Thu, Jul 7, 2011 at 7:16 PM, Michael McCandless
<lucene@mikemccandless.com> wrote:
> On Thu, Jul 7, 2011 at 7:00 AM, Dawid Weiss <dawid.weiss@gmail.com> wrote:
>> Another option to tradeoff dize and mem is to do a lru like cache of suffix
>> nodes/ registry. Im still working on that api replacement patch so any
>> changes to fst right now scare me...
>
> That sounds cool too!
>
> I opened LUCENE-3289 to allow controlling how hard the Builder tries
> to share suffixes... ie tradeoff CPU/RAM usage while building against
> final FST size.
>
> Mike McCandless
>
> http://blog.mikemccandless.com
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


