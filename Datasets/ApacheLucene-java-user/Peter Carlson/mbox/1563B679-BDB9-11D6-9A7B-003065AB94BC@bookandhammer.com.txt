FROM: Peter Carlson <carl...@bookandhammer.com>
SUBJECT: Re: Filtering
DATE: 1 Sep 2002

Hi Sid,

You could filter, but another approach might be to add a tag into the 
"secured" documents so that depending on the user credentials, you can 
decide if they find those documents.

So something like

regular non-secure user search string

test AND quality

get converted to

(test AND quality) AND secured:false

for a secure user you can use the same provided search string (unless 
there are level of course).

This would hopefully deal with issues during optimizations where the 
internal ID # changes and the bit positions. Also, I don't know what 
the default is for additions (add it or not) using filters.

I hope that helps.

--Peter

On Friday, August 30, 2002, at 07:25 AM, Sid_Raisoni@VWR.COM wrote:

>
> Happy friday everyone:
>
> In the  index there are serveral files.
>
> Via filtering I want to restrict access to some of these documents for
> non-priviledged regular users (majority of the searches are performed 
> by
> regular non-priviledged users). When a priviledged user logs on he 
> should
> have access to all documents.
>
> I hope this answers your question. All ideas will be appreciated.
>
> Thanks
>
> Sid
>
>
>
>
>
>                     Peter Carlson
>                     <carlson@bookandh       To:     "Lucene Users 
> List" <lucene-user@jakarta.apache.org>
>                     ammer.com>              cc:
>                                             Subject:     Re: Filtering
>                     08/29/02 12:02 PM
>                     Please respond to
>                     "Lucene Users
>                     List"
>
>
>
>
>
>
> What do you wan to the filtering to accomplish?
>
> --Peter
>
>
> On Wednesday, August 28, 2002, at 11:40 AM, Sid_Raisoni@VWR.COM wrote:
>
>>
>> Hi All:
>>
>> Is there any one who has written a filter for Lucene?
>>
>> According to the FAQ there are two methods of achieving this
>> 1. Search Query
>>
>>        in this approach, provide your custom filter
>>       object to the when you call the search() method.
>>       This filter will be called exactly once to
>>       evaluate every document that resulted in non
>>       zero score.
>>
>>
>>
>> 2. Selective Collection
>>
>>       in this approach you perform the regular search
>>       and when you get back the hit list, collect only
>>       those that matches your filtering criteria. In
>>       this approach, your filter is called only for
>>       hits that returned by the search method which
>>       may be only a subset of the non zero matches
>>       (useful when evaluating your search filter is
>>       expensive).
>>
>>
>>
>>
>> Searching is done using JSP based site.
>> The index may change consistently.
>> The majority of searches that take place will need filtering.
>> There will be lots of hits.
>> Index is large.
>>
>> 1.Which would be more efficient (faster search) on a very large index?
>> 2.Which is more maintanable?
>> 3.Which is easier to code?
>> 4.Are there any other ways of filtering that anyone else has come up
>> with?
>>
>> All opinions and comments would be appreciated.
>>
>> Thanks
>>
>> Sid
>>
>>
>> --
>> To unsubscribe, e-mail:
>> <mailto:lucene-user-unsubscribe@jakarta.apache.org>
>> For additional commands, e-mail:
>> <mailto:lucene-user-help@jakarta.apache.org>
>>
>>
>
>
> --
> To unsubscribe, e-mail:   <
> mailto:lucene-user-unsubscribe@jakarta.apache.org>
> For additional commands, e-mail: <
> mailto:lucene-user-help@jakarta.apache.org>
>
>
>
>
>
>
> --
> To unsubscribe, e-mail:   
> <mailto:lucene-user-unsubscribe@jakarta.apache.org>
> For additional commands, e-mail: 
> <mailto:lucene-user-help@jakarta.apache.org>
>
>


--
To unsubscribe, e-mail:   <mailto:lucene-user-unsubscribe@jakarta.apache.org>
For additional commands, e-mail: <mailto:lucene-user-help@jakarta.apache.org>


