FROM: Timo Nentwig <luc...@nitwit.de>
SUBJECT: Re: CachingWrapperFilter: why cache per IndexReader?
DATE: 6 Jan 2008

On Wednesday 02 January 2008 08:03:48 Chris Hostetter wrote:
> 1) there is a semi-articulated goal of moving away from "under the
> coveres" weakref caching to more explicit and controllable caching ...

YES! 

BTW why havin caching been removed from QueryFilter at all? Isn't caching the 
only sense of a Filter? I can't think of another one...

> it's not such a big deal in this case since it only comes into play if the
> user uses th eclass -- but it would still be nice if user code had a way
> to actually monitor/manipulate the cache.  (it's a much bigger issue
> with things like FieldCache, see also LUCENE-831)

Yes, I know FieldCache...encountered some queries consuming some 200+ 
MBytes... :-\

> 2) IndexReader implementations are not currently (and have never really
> been) required to return anything useful from the directory() method ...
> in the trunk, classes like MultiReader will throw an UnSupOpEx if
> directory() is called.   in older versions of Lucene, MultiReader would
> return the directory of the first sub IndexReader it was using -- which
> would result in some pretty frustrating cache key collisions if you tried
> to use the directory instead of the IndexReader itself.

Well...implementations really should implement their interface....

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


