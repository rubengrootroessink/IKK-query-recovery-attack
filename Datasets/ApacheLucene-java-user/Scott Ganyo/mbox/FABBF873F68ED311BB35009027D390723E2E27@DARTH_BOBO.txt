FROM: Scott Ganyo <scott.ga...@eTapestry.com>
SUBJECT: RE: File Handles issue
DATE: 15 Oct 2001

Thanks for the detailed information, Doug!  That helps a lot.

Based on what you've said and on taking a closer look at the code, it looks
like by setting mergeFactor and maxMergeDocs to Integer.MAX_VALUE, an entire
index will be built in a single segment completely in memory (using the
RAMDirectory) and then flushed to disk when closed.  Given enough memory, it
would seem that this would be the fastest setting (as well as using a
minimum of file handles).  Would you agree?

Thanks,
Scott

P.S. At one point I tried doing an in-memory index using the RAMDirectory
and then merging it with an on-disk index and it didn't work.  The
RAMDirectory never flushed to disk... leaving me with an empty index.  I
think this is because of a bug in the mechanism that is supposed to copy the
segments during the merge, but I didn't follow up on this.

