FROM: "Stephane Nicoll" <stephane.nic...@gmail.com>
SUBJECT: Re: newbie question on querying on multiple attributes
DATE: 16 Dec 2008

Consider the use of the ClassBridge in Hibernate Search. Very useful. It
basically allows you to merge multiple fields of your hibernate entity into
a single lucene field. Once this is done, you can query this single field
from lucene without the need for BooleanQuery.

HTH,
St√©phane



On Tue, Dec 16, 2008 at 4:51 PM, Doug Leeper <dougleeper@yahoo.com> wrote:

>
> I am using Hibernate as my persistence layer and have recently found
> Hibernate Search and Lucene as a possible solution to my full text search.
> However, I am a little fuzzy on what exactly needs to be done in my
> situation.
>
> In a nutshell, I have a Business object that has multiple of attributes
> that
> needs to be indexed (name, summary, products, services, etc)
>
> I would like to provide functionality in my web app that provides a user a
> single text field that would match Businesses against all the identified
> attributes.
>
> I am assuming there are more than one option...but what is the best
> approach
> to accomplishing this scenario?
>
> I am assuming that i need to create different terms for each indexed
> attribute...correct?  If so, do I need to create a BooleanQuery for each
> term?
>
> I am sure there is an example out there...but I haven't found one or have
> misunderstood what I have seen so far.  So if there is a something out
> there, could someone direct me to it?
>
> Thanks in advance,
> - Doug
> --
> View this message in context:
> http://www.nabble.com/newbie-question-on-querying-on-multiple-attributes-tp21035723p21035723.html
> Sent from the Lucene - Java Users mailing list archive at Nabble.com.
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>


-- 
Large Systems Suck: This rule is 100% transitive. If you build one, you
suck" -- S.Yegge

