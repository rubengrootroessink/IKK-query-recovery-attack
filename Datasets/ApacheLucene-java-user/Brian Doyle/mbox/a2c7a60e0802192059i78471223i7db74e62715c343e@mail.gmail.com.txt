FROM: "Brian Doyle" <brianpdo...@gmail.com>
SUBJECT: Re: FieldSortedHitQueue rise in memory
DATE: 20 Feb 2008

In our custom sort code we had many issues.  We fixed most of them by
implementing hashcode and equals and then needed to have a WeakReference to
the IndexReader.   Once we did this our memory problems have mostly gone
away.  Thanks.

On Feb 19, 2008 7:37 AM, Peter Keegan <peterlkeegan@gmail.com> wrote:

> Hi Brian,
>
> I ran into something similar a long time ago. My custom sort objects were
> being cached by Lucene, but there were too many of them because each one
> had
> different 'reference values' for different queries. So, I changed the
> equals
> and hashcode methods to NOT use any instance data, thus avoiding the
> caching.
>
> Could this be what you're seeing?
>
> Peter
>
>
> On Feb 18, 2008 4:20 PM, Brian Doyle <brianpdoyle@gmail.com> wrote:
>
> > We've implemented a custom sort class and use it to sort by distance.
> We
> > have implemented the equals and hashcode in the sort comparator.   After
> > running for a few hours we're reaching peak memory usage and eventually
> > the
> > server runs out of memory.   We did some profiling and noticed that a
> > large
> > chunk of memory is being used in the
> > lucence.search.FieldSortedHitQueueclass.   Has anyone seen this
> > behavior before or know how we can stop this
> > class from growing in size?
> >
>

