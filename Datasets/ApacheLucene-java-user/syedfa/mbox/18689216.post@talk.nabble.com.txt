FROM: syedfa <fayyazud...@gmail.com>
SUBJECT: Re: Creating an index from an XML file using Lucene in Java
DATE: 28 Jul 2008


Thanks Karsten for your reply.  I will implement your solution tonight,
however I did have a quick follow up question.  I understand how you are
implementing the solution for the "SCENE-COMMENTARY" tag, however because at
present I am working with the "LINES" tag, shouldn't I continue using that
instead of the "SPEECH" element?  Any reason why I should switch?  Just
wondering.  I will try both approaches tonight and let you know how it goes.

Thanks again for your help, I really appreciate it.

Take care.
Sincerely;
Fayyaz



Karsten F. wrote:
> 
> Hi Fayyaz,
> 
> again, this is about SAX-Handler not about lucene.
> 
> My understanding of what you want:
> 1. one lucene document for each SPEECH-Element (already implemented)
> 2. one lucene document for each SCENE-COMMENTARY-Element (not implemented
> yet).
> 
> correct?
> 
> If yes, you can write
>                 if(qName.equals("SPEECH") ||
> qName.equals("SCENE-COMMENTARY")){
>                         doc=new Document();
>                 }
> and
> 
> public void endElement(String uri, String localName, String qName) throws
> SAXException{
> ...
> else if(qName.equals("SCENE-COMMENTARY")){
>  Field lines = new Field(qName, elementBuffer.toString(), Field.Store.YES,
> Field.Index.TOKENIZED, Field.TermVector.YES);
>  doc.add(lines);
> }
> ...
> if(qName.equals("SPEECH") || qName.equals("SCENE-COMMENTARY")){
>   indexWriter.addDocument(doc);
> }
> 
> (instead of "indexWriter.addDocument(doc);" in block of
> if(qName.equals("LINES")){ )
> 
> 
> 
> Best regards
>   Karsten
> 
> P.S.:
> If you want to learn java: 
> I really like 
> http://www.java-hamster-modell.de/
> possible there is an english version somewhere?
> 
> 
> syedfa wrote:
>> 
>> I think I understand what you are saying, but I was hoping you could
>> clarify a little further.  in the start-element method, I have the
>> following:
>> 
>>                 if(qName.equals("SPEECH")){ 
>>                         doc=new Document(); 
>>                 }
>> 
>> are you saying that I should add an identical block of code for
>> <SCENE-COMMENTARY> as well, and include a similar clause in the
>> endElement method as well? i.e.
>> 
>>                          else if(qName.equals("SCENE-COMMENTARY")){ 
>>                                 Field lines = new Field(qName,
>> elementBuffer.toString(), Field.Store.YES, Field.Index.TOKENIZED,
>> Field.TermVector.YES); 
>>                                 lines.setBoost(1.0f); 
>>                                 doc.add(lines); 
>>                                 indexWriter.addDocument(doc);
>>                          } 
>> 
>> Does it also matter where in the if/else if clauses I mention the
>> "SCENE-COMMENTARY" tag?  ie. should I mention it first?  last?  or does
>> the order matter?
>> 
>> Just wondering.
>> Thanks again for your prompt reply.
>> Sincerely;
>> Fayyaz
>> 
>> P.S.  This is actually a personal project, as I have developed an
>> interest in Information Retrieval and simply wanted to work on a creative
>> project to help me develop my skills.  :-) 
>> 
> 
> 

-- 
View this message in context: http://www.nabble.com/Creating-an-index-from-an-XML-file-using-Lucene-in-Java-tp18678779p18689216.html
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


