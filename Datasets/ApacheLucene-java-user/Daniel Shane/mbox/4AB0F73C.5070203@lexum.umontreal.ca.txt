FROM: Daniel Shane <sha...@LEXUM.UMontreal.CA>
SUBJECT: Re: Run your Lucene Applications on Google AppEngine with GAELucene
DATE: 16 Sep 2009

I question the performance of such an approach. For lucene to be fast, 
disk access need to be fast, and the transaction stuff with google is 
not that good.

I'll have to test it out to see, but I anticipate a huge performance hit 
compared to lucene running with a real HDD access.

Daniel Shane

Allahbaksh Mohammedali Asadullah wrote:
> Hi,
> This is great news and good work. I think I will try this today evening. I think we should
put this as one of component in lucene-contrib. What do you say? Committer and owner please
comment.
> Regards,
> Allahbaksh
>  
>  
>  
> -----Original Message-----
> From: Kerang Lv [mailto:lvkrnewer@yahoo.com] 
> Sent: Monday, September 14, 2009 9:34 PM
> To: java-user@lucene.apache.org
> Subject: Run your Lucene Applications on Google AppEngine with GAELucene
>
> Hi Lucene users,
>
> Enlightened by the discussion "Can I run Lucene in google app engine? [http://www.nabble.com/Can-I-run-Lucene-in-google-app-engine--td23017742.html],
I implemented a google datastore based Lucene component, GAELucene, which can help you to
run search applications on google app engine.
>
> The main clazz of GAELucene include: 
>     * GAEDirectory - a read only Directory based on google datastore. 
>     * GAEFile - stands for an index file, the file's byte content will be splited into
multi GAEFileContent. 
>     * GAEFileContent - stands for a segment of index file. 
>     * GAECategory - the identifier of different indices. 
>     * GAEIndexInput - a memory-resident IndexInput? implementation like the RAMInputStream.

>     * GAEIndexReader - wrapper for IndexReader? that cached in GAEIndexReaderPool 
>     * GAEIndexReaderPool - pool for GAEIndexReader 
>
> The following code snippet demonstrates the use of GAELucene do searching: 
>   Query queryObject = parserQuery(request);
>   GAEIndexReaderPool readerPool =GAEIndexReaderPool.getInstance();
>   GAEIndexReader indexReader = readerPool.borrowReader(INDEX_CATEGORY_DEMO);
>   IndexSearcher searcher =newIndexSearcher(indexReader);
>   Hits hits = searcher.search(queryObject);
>   readerPool.returnReader(indexReader);
>
> You can find morere 'http://code.google.com/p/gaelucene/'
>
>
>
>       
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>   


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


