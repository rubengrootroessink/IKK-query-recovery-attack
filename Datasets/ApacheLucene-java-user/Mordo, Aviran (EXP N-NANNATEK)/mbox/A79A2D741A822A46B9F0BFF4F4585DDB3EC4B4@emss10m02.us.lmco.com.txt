FROM: "Mordo, Aviran (EXP N-NANNATEK)" <aviran.mo...@lmco.com>
SUBJECT: RE: Searching on a Rapidly changing Index
DATE: 24 May 2007

You can create two indexes. One will be for new documents, let say the
last 24 hours and another one for older documents. This way you will
only update a small portion of your index while the large index will
remain relatively constant so you don't have to get a new searcher for
it.

HTH

Aviran
http://www.aviransplace.com
http://shaveh.co.il 

-----Original Message-----
From: Simon Wistow [mailto:simon@thegestalt.org] 
Sent: Thursday, May 24, 2007 5:22 AM
To: Lucene
Subject: Searching on a Rapidly changing Index

I've built a Lucene system that gets rapidly updated - documents are
supposed to be searchable immeidately after they've been indexed.

As such I have a Writer that puts new index, update and delete tasks
into a queue and then has a thread which consumes them and applies them
to the index using one instance of an IndexModifier. So far so good.

However every new Search opens up a new IndexSearcher in order to make
sure that it gets new documents. The docs indicate is a big performance
penalty. 

Are there any tips or tricks I can use to mitigate this?

thanks,

Simon

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


