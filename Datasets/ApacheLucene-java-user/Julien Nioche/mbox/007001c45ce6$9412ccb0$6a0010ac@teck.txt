FROM: "Julien Nioche" <Julien.Nio...@lingway.com>
SUBJECT: Re: Optimizing for long queries?
DATE: 28 Jun 2004

Hello Drew,

I don't think it's in the FAQ.

1 - What you could do is to sort your query terms by ascending alphabetic
order. In my case it improved a little bit the performance. It could be
interesting to know how it worked in your case.

2- Another solution is to play with TermInfosWriter.INDEX_INTERVAL at
indexation time. I quote Doug :

"..., try reducing TermInfosWriter.INDEX_INTERVAL.  You'll
have to re-create your indexes each time you change this constant.  You
might try a value like 16.  This would keep the number of terms in
memory from being too huge (1 of 16 terms), but would reduce the average
number scanned from 64 to 8, which would be substantial.  Tell me how
this works.  If it makes a big difference, then perhaps we should make
this parameter more easily changeable."

Have you used a profiler on your application? This could be useful to spot
possible improvments.


----- Original Message ----- 
From: "Drew Farris" <drew.farris@gmail.com>
To: <lucene-user@jakarta.apache.org>
Sent: Friday, June 25, 2004 8:24 PM
Subject: Optimizing for long queries?


> Apologies if this is a FAQ, but I didn't have much luck searching the
> list archives for answers on this subject:
>
> I'm using Lucene in a context where we have frequently have queries
> that search for as many as 30-50 terms in a single field. Does anyone
> have any thoughts concerning ways optimize Lucene for queries of these
> lengths?
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
> For additional commands, e-mail: lucene-user-help@jakarta.apache.org
>
>


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


