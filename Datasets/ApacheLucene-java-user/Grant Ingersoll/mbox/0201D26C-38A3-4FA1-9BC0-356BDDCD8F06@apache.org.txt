FROM: Grant Ingersoll <gsing...@apache.org>
SUBJECT: Re: Scoring on Number of Unique Terms Hit, Not Term Frequency Counts
DATE: 25 May 2007

I know you have a solution already that I agree with, but I do think  
the DisjunctionMaxQuery could serve as the start for writing your own  
Query that did what you want.  Why would you want to?  Well, maybe  
you have other ways you want to search as well and don't want to mess  
with custom Similarity, omit norms, etc. or having to duplicate your  
fields to support both.  Just a thought.

Also, see below...

On May 25, 2007, at 9:49 AM, Walt Stoneburner wrote:
> ps.  I wasn't even aware DisjunctionMaxQuery existed; is there a
> resource that describes the purpose of BooleanQuery,
> DisjunctionMaxQuery, and others in simple reference?
>

http://lucene.apache.org/java/docs/scoring.html has some links to the  
search javadocs which contains info on the queries.

> For instance, if I go to the BooleanQuery page,
> http://lucene.zones.apache.org:8080/hudson/job/Lucene-Nightly/ 
> javadoc/org/apache/lucene/search/BooleanQuery.html,
> It doesn't even say "sum of the field scores" -- maybe I'm looking in
> the wrong place, but for someone new to the API, it's very hard to
> figure out what class you want when it's unclear what specific affect
> it has on scoring.

Good point.  I am _hoping_ to focus on documentation this year, but I  
have been saying that for a while now and it is already almost June!   
I guess, at a minimum, you should write up a bug on how to improve  
it, even better is a patch!

Lucene in Action has good docs on the query type, but, of course,  
that requires a purchase, so it is less than satisfactory even as  
good as the book is.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


