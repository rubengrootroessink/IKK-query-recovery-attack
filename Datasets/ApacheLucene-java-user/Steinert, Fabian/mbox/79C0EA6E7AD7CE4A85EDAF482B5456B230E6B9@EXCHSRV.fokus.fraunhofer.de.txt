FROM: "Steinert, Fabian" <Fabian.Stein...@fokus.fraunhofer.de>
SUBJECT: RE: Calling indexWriter.close() in web app
DATE: 10 Jul 2007

Hi,
 
you do not need to writer.close() the IndexWriter at all to make changes visible.
 
When IndexWriter is constructed with autoCommit = true flag set,
calling writer.flush() will do.
 
This way you can keep your single IndexWriter at App-level handling all the synchonization.
 
Have a look at the IndexWriter API Spec, too.
 
Hope im right with this and it helps you,
Fabian
 

________________________________

Von: vcampa [mailto:campanile@interfree.it]
Gesendet: Mo 09.07.2007 10:10
An: java-user@lucene.apache.org
Betreff: Calling indexWriter.close() in web app




I'm developing a web app with struts that need to embed lucene
functionalities. I need that my app adds documents to the index after that a
document is added (documents are very few, but of large size). I read that i
have to use a single instance of indexwriter to edit the index. Suppose i
use a singleton or store indexwriter in the application scope to grant all
users to use that single instance.
My questions are:
- when i can close indexwriter to flush changes?
- How to know that an indexwriter has been closed before adding documents to
it?
- What does it happen if users continue adding documents to the index after
one user action closed it?

Please help!

Sorry for my bad english.
--
View this message in context: http://www.nabble.com/Calling-indexWriter.close%28%29-in-web-app-tf4047813.html#a11497597
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org





