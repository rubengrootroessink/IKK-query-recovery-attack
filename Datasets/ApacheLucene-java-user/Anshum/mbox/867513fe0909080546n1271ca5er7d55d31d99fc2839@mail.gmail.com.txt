FROM: Anshum <ansh...@gmail.com>
SUBJECT: Re: large document with multiple fields performance
DATE: 8 Sep 2009

Hi Stephen,
Could you clarify more on the requirement. Do you intend to have data in
index as:
Document{
  String Comment;
  String CommentId;
  String ProjectId;
}

How do you intend to index it.. as in the doc structure? Is there  a primary
key there? What would you search on? What would you want to have as the
result?
All said and done, its not really an overhead as long as the number of
fields is within normal bounds.


--
Anshum Gupta
Naukri Labs!
http://ai-cafe.blogspot.com

The facts expressed here belong to everybody, the opinions to me. The
distinction is yours to draw............


On Tue, Sep 8, 2009 at 5:27 PM, Stephen Greene
<SGreene@metalseconomics.com>wrote:

> Hello,
>
>
>
> I am new to lucene and building an application which requires documents
> with many fields to be searched.
>
> A "project" id is being stored (not_analyzed) and all matching project
> ids will be returned to be used to join other data from a database.
>
> Will it provide better performance to store each comment field in a
> separate document with the project ID and a comment ID or to store all
> the comments for a single project in a single document with multiple
> fields?
>
>
>
> Thanks,
>
>
>
> Steve Greene
>
>

