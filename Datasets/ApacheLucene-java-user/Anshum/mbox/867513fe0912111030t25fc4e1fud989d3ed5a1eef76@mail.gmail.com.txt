FROM: Anshum <ansh...@gmail.com>
SUBJECT: Re: Lucene 3.0.0 writer with a Lucene 2.3.1 index
DATE: 11 Dec 2009

Hi Tom,
Pt 3: As per my knowledge, it wouldn't be a 'mixture' of 2 index types.
Rather, as soon as you optimize (or do a IndexWriter operation on the
current index), it would expand the index to a non compressed format. I read
it somewhere in the release notes that on doing so, a growth in the index
size should be anticipated and handled.

--
Anshum Gupta
Naukri Labs!
http://ai-cafe.blogspot.com

The facts expressed here belong to everybody, the opinions to me. The
distinction is yours to draw............


On Fri, Dec 11, 2009 at 10:50 PM, Rob Staveley (Tom)
<rstaveley@seseit.com>wrote:

> I'm upgrading from 2.3.1 to 3.0.0. I have 3.0.0 index readers ready to go
> into production and writers in the process of upgrading to 3.0.0.
>
> I think understand the implications of
> http://wiki.apache.org/lucene-java/BackwardsCompatibility#File_Formats for
> the upgrade, but I'd love it if someone could validate my following
> assumptions.
>
>  1. My 2.3.1 indexes have compressed fields in them, which the 3.0.0
> readers work nicely with, as expected. I should assume that my 3.0.0
> readers
> will continue to handle 2.3.1 indexes OK.
>
>  2. Presumably Lucene all future 3.x index readers will continue to handle
> compressed fields and we should only anticipate Lucene 4.x choking on them.
>
> I was naively expecting my index directories to grow when my 3.0.0 index
> writer merged the 2.3.1 indexes and/or optimize()'d them converting them to
> 3.0.0. However, I don't see that. Presumably that means that....
>
>  3. Documents added to existing 2.3.1 indexes will be added conforming to
> 3.0.0, but existing documents in the index will continue to have compressed
> content and old documents can coexist happily with the new ones, and my
> indexes will become a mixture of 2.3.1 and 3.0.0.
>
>  4. I should use
>
> http://lucene.apache.org/java/2_9_1/api/all/org/apache/lucene/util/Version.h
> tml#LUCENE_23 for the StandardAnalyzer and QueryParser in mixed indexes in
> 3.0.0 if I want to handle analysis consistently, or go for LUCENE_CURRENT
> if
> I want to handle the new content "better" (bearing in mind that the new
> content will eventually replace the old content anyhow).
>
>  5. I should use
>
> http://lucene.apache.org/java/3_0_0/api/all/org/apache/lucene/analysis/StopF
>
> ilter.html#StopFilter%28boolean,%20org.apache.lucene.analysis.TokenStream,%2
> 0java.util.Set%29 with enablePositionIncrements=false in mixed indexes in
> 3.0.0 if I want to handle analysis consistently, or go for
> enablePositionIncrements=true if I want to handle the new content "better"
> (bearing in mind that the new content will eventually replace the old
> content anyhow).
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

