FROM: "George Washington" <gws...@hotmail.com>
SUBJECT: RE: Storing large text or binary source documents in the index and memory usage
DATE: 22 Jan 2006

thank you Daniel, but the best I get from MaxBufferedDocs(1) is an OOM error 
after trying 5 iterations of 10MB each in the JUnit test provided by Chris, 
running inside Eclipse 3.1.
I had already tried with MaxBufferdDocs(2) with no success before I posted 
the original post.
I also tried:
  writer.setMaxBufferedDocs(1);
  writer.setMergeFactor(2);
but with the same result.

My heap size is set in the eclipse command line with:  
C:\eclipse\eclipse.exe -vmargs -Xmx350M
Increasing the size does not help.
If you actually tried Chris's test program and got it to run successfully 
there must be something  wrong in my Eclipse config. I cannot think of any 
other possible cause for the difference in your results from mine.
But I am open to all suggestions.
thanks

_________________________________________________________________
ASUS M5 Ultra-slim lightweight is Now $1999 (was $2,999)  
http://a.ninemsn.com.au/b.aspx?URL=http%3A%2F%2Fwww%2Easus%2Ecom%2Eau%2F&_t=752129232&_r=Hotmail_tagline_23Nov05&_m=EXT


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


