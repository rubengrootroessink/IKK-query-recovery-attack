FROM: tsuraan <tsur...@gmail.com>
SUBJECT: Re: ZipFile directory implementation
DATE: 9 Mar 2009

> Also, have you looked at how it performs?

Just making a directory of 1,000,000 documents and reading from it, it
looks like this implementation is probably unbearably slow, unless
Lucene has some really good caching.  ZipFile gives InputStreams for
the zip contents, and InputStreams don't support a seek (I'm guessing
that zip files probably don't either), so nearly every time Lucene
calls seek on the IndexInput we actually have to do a ton of reading.
I'm guessing that there's no good way around this, so my ZipDirectory
is probably not good for much unless you're really hard-up for drive
space, or if you want to use Directory.copy to put it into a
RAMDirectory for actual use :)

Is there any compressed format that does support random access?

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


