FROM: Sami Dalouche <sko...@free.fr>
SUBJECT: Re: Lucene search optimization
DATE: 31 May 2006

Hi,

thanks for the tip.. However, my slowness issues do not seem to be
caused by the number of search results returned, since cityName:XX~0.8
took 2 seconds to return 2 results....

So, the problem seems to be more related to scanning the index...

Thanks,
Sami Dalouche

Le mardi 30 mai 2006 à 16:55 +0100, mark harwood a écrit :
> Take a look at "FuzzyLikeThisQuery" in
> contrib\queries.
> 
> I use it for name searches on large indexes. 
> Unlike FuzzyQuery it:
> a) limits the number of query terms produced
> b) provides better ranking (disables idf factor which
> otherwise boosts rare misspellings)
> 
> The cost of running a query is strongly related to the
> quantity of terms in the query.
> FuzzyQuery only limits the number of terms by quality
> (which means you can unexpectedly produce a large
> quantity of terms and therefore have a slow query).
> FuzzyLikeThis is more explicit - it limits the
> *quantity* of terms used (and automatically shortlists
> to the best quality terms using the same edit-distance
> metric as FuzzyQuery for ranking quality). 
> 
> 
> Cheers,
> Mark
> 
> 
> 
> 	
> 	
> 		
> ___________________________________________________________ 
> All new Yahoo! Mail "The new Interface is stunning in its simplicity and ease of use."
- PC Magazine 
> http://uk.docs.yahoo.com/nowyoucan.html
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
> 


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


