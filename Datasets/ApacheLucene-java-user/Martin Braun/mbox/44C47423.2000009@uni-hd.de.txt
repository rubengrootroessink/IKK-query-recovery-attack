FROM: Martin Braun <mbr...@uni-hd.de>
SUBJECT: drill-down heuristics WAS: Where to find drill-down examples (source code)
DATE: 24 Jul 2006

hi miles,

thanks for the response.
I think I didn't explain my Problem good enough.

The harder problem for me is how to get the proposals for the
refinement?  I have a date-range of 16xx to now, for about 4 bn. docs.
So the number of found documents could be quite large. But the
distribution of the dates could be very different form one query to another.
I hope there is a better way than to collect all dates with HitIterator,
and do statistics on the data?

Is there something that could be done while indexing?
What would be a high-performance heuristic?

The same problem with other categories like the author: how to find good
proposals for a given result set?

>> I want to have something like:
>>
>> Refine by Date:
>> * 1990-2000 (30 Docs)
>> * 2001-2003 (200 Docs)
>> * 2004-2006 (10 Docs)
>>
>> But not only DateRanges but also for other Categories.
>>
>> Does anybody knows where to find some Source Code, to get an Idea how to
>> implement this?
>> I think that's a useful property for a search engine, so are there any
>> contributions for Lucene for that?
>>
> 
> If you want to do a refined search I'd put the original query in a
> QueryFilter, which filters on the new search.
> 
> http://lucene.apache.org/java/docs/api/org/apache/lucene/search/QueryFilter.html
> Alternatively, since you appear to only want to refine on dates and
> categories, you might want to put them in filters so they don't affect
> the score, and leave the query as is. In which case you can use a
> RangeQuery for the dates, and a wrap a TermQuery in a QueryFilter to
> handle the categories.
> 
> If you need multiple filters you can use the ChainedFilter class.
> 


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


