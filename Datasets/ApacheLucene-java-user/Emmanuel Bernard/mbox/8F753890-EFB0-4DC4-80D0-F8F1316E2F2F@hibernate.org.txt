FROM: Emmanuel Bernard <emman...@hibernate.org>
SUBJECT: Re: Lucene as primary object storage
DATE: 30 Jun 2007

While not everything in the following post apply to Lucene as a  
storage solution, it has some interesting points
http://blog.hibernate.org/cgi-bin/blosxom.cgi/2007/05/23#in-defence

I need to trust my data storage for its good support for:
  - transaction
  - reliability
  - scalability
  - readability (being able to read my data from any random language  
on earth 10 years from now)

I trust my RDBMS because it's been 30 years that they deliver on all  
of those criteria.

There are other qualities that explain why I prefer Relational DB to  
keep my data (including relational queries, ability to do correlated  
queries between 2 or more "associated" entities/documents), but that  
should be good enough to give you an idea of that I think.


On  Jun 29, 2007, at 08:48, karl wettin wrote:

> 28 jun 2007 kl. 15.37 skrev Emmanuel Bernard:
>> I don't really like the idea actually: I'm much comfortable with  
>> having my data in a relational DB :)
>
> If you don't mind, please develop that a bit further.
>
>
> I think Lucene is suited pretty well for object storage if you also  
> need it as an index. It is especially great for them heavy  
> polymorphic or inheritive models. One simple term query can span  
> multiple classes. Many ORMs require SQL joins or what unless you  
> choose to store the data in some semi-retarded way.
>
> There are of course some setbacks. I can not update a single field  
> of an instance, I have to update the whole thing. So one have to be  
> careful with bi-directional associations beween classes and such.
>
>
> My hypotheisis in general goes something like "the less, the  
> simpler, the faster, the better it is". That is probably why I sort  
> of got sidetracked by the codemonkey on my shoulder while fooling  
> around with @annotation for the first time and ended up with an  
> object storage somewhere between the Sleepycat transactional API  
> and the Hibernate lazy patterns, but using Lucene as persistency. I  
> still don't know how well it works with lots of data.
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


