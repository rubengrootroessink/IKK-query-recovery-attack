FROM: "Peter Kim" <p...@cymfony.com>
SUBJECT: IndexSearcher architecture and memory usage
DATE: 21 Sep 2005

Hi all,
I've been searching through the list archives for this info but haven't
found exactly what I'm looking for... Hoping that someone might have the
answer to this off the top of their head.

Is the amount of memory taken up by an IndexSearcher object proportional
to the size of the index? I've read various emails that say the number
of IndexSearcher objects open should be minimized but I've also read
some emails that seem to imply that the objects take up more memory if
the index is larger, so I'm a bit confused.

Specifically, I have an index that is being constantly being updated,
which would require me to close and open a new IndexSearcher very often.
Would it be better to split that up into maybe 3 indexes, only adding
new content to one of them and then have two IndexSearcher objects that
stay open on the "older" content?

If the memory consumption by an IndexSearcher object is proportional to
the size of the index, is there any downside to splitting up a single
large index into up to 30 different indexes? 

I would really appreciate your help.

Thanks!
Peter

-----
Peter Kim
pkim@cymfony.com


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


