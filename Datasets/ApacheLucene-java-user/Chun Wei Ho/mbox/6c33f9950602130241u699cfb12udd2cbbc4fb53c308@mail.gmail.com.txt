FROM: Chun Wei Ho <cwho.w...@gmail.com>
SUBJECT: Re: Suggesting refine searches with Lucene
DATE: 13 Feb 2006

Thanks. But I am actually looking for approaches/libraries which will
help me to come up with the suggested "refine searches".

For example I might search for "accident" on the headlines at a news
site, which would come back with lots of hits. I am looking for
something that would analyze the headlines (or some other specified
text field) of all those hits and come up with a list of refined
searches that would return a specific/considerable subset of the
results, e.g. "Traffic", "plane", "boating", etc, being frequent
occurrences of headline text in news that include "accident" in the
headlines.

I guess its a matter of finding frequently occurring subsequences with
some intelligent guessing but I was hoping that someone else better
would have already done it in a library that I could adapt.

Regards,
CW


On 2/13/06, Ravi <ravi.jaladanki@siti.com> wrote:
> Hi ,
>
>
> I have implemented by using query "mergeBooleanQueries" method... in this
> approach I have created one POJO class of RefineQuery which contains one
> variable called Query and I will set whenever I get a search..
> And next time if it is a refined search I will merge current query with  the
> refinedquery object and get new query and pass to lucene and set the new
> query to refined search object .... this is working fine.. let me know if
> have any further ideas or any new technique to implement refined search
>
>
>
> if(objSearchParameters.isBSearchInSearch()){
>         Query q2                =
> Query.mergeBooleanQueries(new Query[]{  objRefineQuery.getQuery(),
> booleanQuery });
>                 objRefineQuery.setQuery(q2);
>         hits    =        searcher.search(q2);
>             }else{
>                 objRefineQuery.setQuery(booleanQuery);
>         hits    = searcher.search(booleanQuery);
>             }
>
>
>
>
>
>
>
> public class RefineQuery {
>
>         private Query   query = null;
>
>
>         public Query getQuery() {
>                 return query;
>         }
>
>
>         public void setQuery(Query query) {
>                 this.query = query;
>         }
>
>
>         public String toString(){
>           return query.toString();
>         }
>
> }
>
>
>
>
> Regards,
> Ravi Kumar Jaladanki
>
> -----Original Message-----
> From: Chun Wei Ho [mailto:cwho.work@gmail.com]
> Sent: Monday, February 13, 2006 3:05 PM
> To: java-user@lucene.apache.org
> Subject: Suggesting refine searches with Lucene
>
> Hi,
>
> I am trying to suggest refine searches for my Lucene search. For
> example, if a search turned out too many searches, it would list a
> number of document title subsequences that occurred frequently in the
> results of the previous search, as possible candidates for refining
> the search.
>
> Does anyone know the right/any approach to implementing this in a
> Lucene-based search app?
>
> Thanks.
>
> CW
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


