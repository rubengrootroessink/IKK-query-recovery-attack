FROM: "Chun Wei Ho" <cwho.w...@gmail.com>
SUBJECT: QueryFilter and Memory
DATE: 13 Jul 2006

Hi,

I've been trying to adjust the weightings for my searches (thanks
Chris for his replies on that thread), and have been using
ConstantScoreQuery to even out scores from portions in my query that I
want to match but not to contribute to the ranking of that result.

I convert a BooleanQuery/TermQuery (partialQuery) to a constant score
one (before adding them to the overall BooleanQuery that gets
searched) as follows:
constantPartialQuery = new ConstantScoreQuery(new QueryFilter(partialQuery));

These partial queries are adhoc (created according to user input) and
not reused.

It worked but after some extended testing (like running a day of
queries) - i get a Java Heap OutOfMemory error. I'm wondering:

(a) Is there a better way to change a query to a constant score query
other than what I did above?

(b) I'm subclassing the QueryFilter not to cache the query results
(which might be the cause) since the queryfilters are not re-used.
Does anyone have an opinion on what else might be contributing to the
memory problem.

Thanks.

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


