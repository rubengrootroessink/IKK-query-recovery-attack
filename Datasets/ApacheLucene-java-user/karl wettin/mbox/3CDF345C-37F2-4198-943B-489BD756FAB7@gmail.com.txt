FROM: karl wettin <karl.wet...@gmail.com>
SUBJECT: Re: Turning PrefixQuery into a TermQuery
DATE: 12 Apr 2007


12 apr 2007 kl. 20.00 skrev Steffen Heinrich:

> This search is only meant to be used in an ajax-driven web
> application.
> And the basic idea is to give the user incentive and turn him to
> something new, something he didn't think of before.
> I just generalized on the concept in a mail to Erick under the same
> subject. There is also a link to a working implementation that served
> as my model.

As "ivan charo" finds "Ivan Goncharov", I suspect they work on a  
token n gram level. Perhaps that is something you could try?

Still, I don't like the idea of hammering the index like that. But in  
your case that might not be a problem.

> "Tries are also well suited for implementing approximate matching
> algorithms, including those used in spell checking software."
>
> Do you have any information about how this can be done?

The author probably thought of navigating an "a priori" trie (a trie  
filled with known good words) using some path finder algorithm  
(breadth first, Dijkstra, A*, et c) based on the (possibly) incorrect  
spelled word. Personally I think there are better (algorithmic) ways  
to solve that problem.

You are welcome to try <https://issues.apache.org/jira/browse/ 
LUCENE-626> if you find spellchecking interesting.

-- 
karl

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


