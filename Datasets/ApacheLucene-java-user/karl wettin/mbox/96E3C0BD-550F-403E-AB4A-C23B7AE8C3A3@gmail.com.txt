FROM: karl wettin <karl.wet...@gmail.com>
SUBJECT: Re: Turning PrefixQuery into a TermQuery
DATE: 11 Apr 2007


11 apr 2007 kl. 22.32 skrev Steffen Heinrich:

> According to occasional references on this list some people have
> already tried to implement such a search with lucene but did they
> succeed?
>
> My first idea was to run every completed token of the request
> (current user input) through a spellchecker and expand an incomplete
> token to a PrefixQuery.

I've posted a solution in the Jira that use sucessful user queries as  
a cropus rather than bashing a Lucene index, and is thus best suited  
for systems with a bit of user activity. The data is stored in a trie- 
pattern with meta data at each node, allowing for extra data such as  
number of hits, available facet classifications or what not. I've had  
it running for a couple of days in a system with one user query every  
ten milliseconds, so it ought to be stable(tm).

https://issues.apache.org/jira/browse/LUCENE-625

There is a memoryleak in the trie at optimize() that has been fixed  
locally. Might be available in LUCENE-626 too. Not sure right now,  
but let me know and I'll make sure to post it.


-- 
karl

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


