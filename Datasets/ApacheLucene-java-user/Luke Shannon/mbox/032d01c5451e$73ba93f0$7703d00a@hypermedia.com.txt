FROM: "Luke Shannon" <lshan...@futurebrand.com>
SUBJECT: Re: Best way to purposely corrupt an index?
DATE: 19 Apr 2005

The only time I have seen corrupted indexes is when the java process is
killed during the indexing process.

If you shutdown tomcat (or what ever you are running for java) during the
indexing process you will end up with a corrupted index.

----- Original Message ----- 
From: "Andy Roberts" <mail@andy-roberts.net>
To: <java-user@lucene.apache.org>
Sent: Tuesday, April 19, 2005 5:22 PM
Subject: Best way to purposely corrupt an index?


> Hi,
>
> Seems like an odd request I'm sure. However, my application relies an
index,
> and should the index become unusable for some unfortunate reason, I'd like
my
> app to gracefully cope with this situation.
>
> Firstly, I need to know how to detect a broken index. Opening an
IndexReader
> can potentially throw an IOException if a problem occurs, but presumably
this
> will be thrown for other reasons, not just an unreadable index. Would the
> IndexReader.indexExists() be better?
>
> Secondly, to test how my code responds to broken indexes, I'd like to
> purposely break an index. Any suggestions, or will removing any file from
the
> directory be sufficient?
>
> Many thanks,
> Andy
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


