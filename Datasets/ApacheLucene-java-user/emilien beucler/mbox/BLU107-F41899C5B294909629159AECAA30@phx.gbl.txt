FROM: "emilien beucler" <emilienbeuc...@hotmail.com>
SUBJECT: Re: Is Lucene relevant for big amount of small dynamic data?
DATE: 15 Oct 2007


Thank you for this quick answer. Of course a relational database is the most 
immediate answer, but there are two problems:

- I am not sure that performances would be great when potentially each 
criteria can be used/combined for searches. I am not an expert of databases 
but I guess you have to choose the indexes you will want to use, so a few 
kinds of searches will be performant, others will not, right? What seemed 
interesting in Lucène is that it is said to be performant for all kinds of 
searches.

- With this model I cannot add criteria "on the fly". Let's say I want a new 
criterion: "olympic games Beijing 2008" That will apply to some of the 
hotels, for a certain time range. With Lucène I guess I could enrich the 
documents with the new criterion before adding them to the index. With a 
database, I can only reserve a fixed number of columns for that, or have 
more complex queries (without indexing). Do you see what I mean?

Thanks again,

Emilien

>From: Kurt Haegeman <kurt.haegeman@mediargus.be>
>Reply-To: java-user@lucene.apache.org
>To: java-user@lucene.apache.org
>Subject: Re: Is Lucene relevant for big amount of small dynamic data?
>Date: Mon, 15 Oct 2007 12:43:52 +0200
>
>emilien beucler wrote:
>>Hello,
>>
>>I need to implement a search tool, and I would like to know if Lucene 
>>could be used for my particular problem. Let's take an example:
>>
>>A hotel company has several hundreds of hotels around the world. for each 
>>hotel there are hundreds of rooms, whose price are constantly changing. 
>>The idea is to create a multi-criteria search tool to find a room. The 
>>pieces of information to store are all the same, they are something like: 
>>(room_size, number_of_stars, city, date_of_arrival, number_of_beds, 
>>price...)
>>Let's says there are around 15 caracteristics, and about 5 millions pieces 
>>of information. The goal is to obtain a tool that:
>...
>
>None of the criteria you mention justifies the use of a full-text search 
>solution. If I were you (but I'm not), I'd stick to a relational database 
>for this project. Even if there's a small field or two with searchable text 
>data, the database itself could cope with this (Oracle Text, MySQL 
>full-text search etc...).
>
>My 2 cents,
>Kurt.
>
>---------------------------------------------------------------------
>To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>For additional commands, e-mail: java-user-help@lucene.apache.org
>

_________________________________________________________________
Windows Live Spaces : créez votre blog à votre image ! 
http://www.windowslive.fr/spaces


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


