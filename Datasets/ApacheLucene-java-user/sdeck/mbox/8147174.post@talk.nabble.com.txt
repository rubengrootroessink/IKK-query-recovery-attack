FROM: sdeck <scott.dec...@gmail.com>
SUBJECT: Re: Speed of grouped queries
DATE: 3 Jan 2007


Sorry, one more bit of info.
In the index, the contents of the article are stored/indexed.  These are
just the guts though, and it is around 1-3K worth of character data.
The current index, as it stands with 33K of documents is about 109 megs.

Again, it seems like I am just missing something somewhere. Thanks for being
the sounding board.
Scott



Steven Rowe wrote:
> 
> Hi Scott,
> 
> sdeck wrote:
>> I guess, any ideas why I would run out of heap memory by combining all of
>> those boolean queries together and then running the query? What is
>> happening
>> in the background that would make that occur? Is it storing something in
>> memory, like all of the common terms or something, to cause that to
>> occur?
> 
> Doug Cutting gives a formula for Lucene memory usage for queries here
> (from 2001):
> 
> <http://mail-archives.apache.org/mod_mbox/lucene-java-user/200111.mbox/%3c4BC270C6AB8AD411AD0B00B0D0493DF0D78A1C@mail.grandcentral.com%3e>
> 
> And some more info here about the term dictionary (from 2003):
> 
> <http://mail-archives.apache.org/mod_mbox/lucene-java-dev/200305.mbox/%3c3EC555CE.4080906@lucene.com%3e>
> 
> You might want to look at this thread, which has some discussion about
> omitting norms and the term dictionary (from 2005):
> 
> <http://www.nabble.com/Memory-Usage-tf523535.html>
> 
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
> 
> 
> 

-- 
View this message in context: http://www.nabble.com/Speed-of-grouped-queries-tf2910499.html#a8147174
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


