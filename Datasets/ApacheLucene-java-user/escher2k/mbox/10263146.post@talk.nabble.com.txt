FROM: escher2k <esche...@yahoo.com>
SUBJECT: Re: Modifying norms...
DATE: 1 May 2007


Essentially what I am trying to do is boost every document by a certain
factor, so that
the boost is between 1.0 and 2.0. After this, I we are trying to do a search
across multiple fields
and have a computation based purely on tf. Example -
if (field1)
  tf = some function
else if (field2)
  tf = some other function
...

Now the boost is getting rounded to 1.0, 1.25, 1.5 or 2.0 due to the norm is
stored, whereas I want more precision (e.g. 1.31, 1.45 etc). The boost is
used for ranking documents. 

Thanks.


Chris Hostetter wrote:
> 
> 
> : Thanks Hoss. Suppose, I go ahead and modify Similarity.java from
> 	...
> : Should this work ?
> 
> it depends on your definition of "work" ... if that code is what you want
> it to do, then yes: it will do what you want it to do.
> 
> : P.S. This is a very custom implementation. For the specific problem that
> I
> : have, the lengthNorm
> : is set to 1 (independent of numTerms).
> 
> if your length norm is always 1, why do you care what the norm values are?
> are you using document and field boosts? ... if "no" then none of this
> shoudl matter.  if "yes" then why not just change the boost values you use
> to get the behavior you want instead of modifying the encoding mechanism?
> 
> 
> 
> 
> -Hoss
> 
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
> 
> 
> 

-- 
View this message in context: http://www.nabble.com/Modifying-norms...-tf3671499.html#a10263146
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


