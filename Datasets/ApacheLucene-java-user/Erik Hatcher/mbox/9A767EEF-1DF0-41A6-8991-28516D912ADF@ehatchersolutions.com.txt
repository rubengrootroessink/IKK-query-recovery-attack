FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: SpanRegex speed
DATE: 31 Aug 2006


On Aug 30, 2006, at 6:13 PM, Mark Miller wrote:
> * An implementation tying Java's built-in java.util.regex to  
> RegexQuery.
> *
> * Note that because this implementation currently only returns null  
> from
> * {@link #prefix} that queries using this implementation will  
> enumerate and
> * attempt to {@link #match} each term for the specified field in  
> the index.
>
> Is this another way to say im gonna be friggen slow? Say it aint so...

"slow" is relative.  It will enumerate all the terms for the  
specified field and run a regular expression match on each one.  The  
same thing happens with FuzzyQuery and prefixed WildcardQuery too.   
These aren't necessarily "slow", so try it and see.

> I want to use this as a multi-phrase query...a spannear with a term  
> that could be the regex "term1|term2"

What about nesting a SpanOrQuery for those two terms inside a  
SpanNearQuery?

> I need this. Pipe dream for speed on a huge index?

Feel free to implement a robust prefix method :)  It's much more  
difficult than I wanted to tackle when I created this  
infrastructure.  But thankfully Regexp implemented it, so you could  
use it for prefix computation and a different matcher implementation  
if you like.

	Erik



---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


