FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: Some problem with prefix wilcard search
DATE: 19 Sep 2005


On Sep 19, 2005, at 11:03 AM, tirupathi reddy wrote:
> C:\LUCENE-CURRENT\SOURCE\lucene-1.4.3>ant -Djavacc.home=c:/javacc  
> javacc
> Buildfile: build.xml
> init:
> javacc-check:
> javacc-StandardAnalyzer:
> invoke-javacc:
>      [java] Java Compiler Compiler Version 3.2 (Parser Generator)
>      [java] (type "javacc" with no arguments for help)
>      [java] Reading from file C:\LUCENE-CURRENT\SOURCE\lucene-1.4.3 
> \src\java\org
> \apache\lucene\analysis\standard\StandardTokenizer.jj . . .
>      [java] Note: UNICODE_INPUT option is specified. Please make  
> sure you create
>  the parser/lexer usig a Reader with the correct character encoding.
>      [java] Parser generated successfully.
>      [copy] Copying 3 files to C:\LUCENE-CURRENT\SOURCE\lucene-1.4.3 
> \src\java\or
> g\apache\lucene\analysis\standard
> javacc-QueryParser:
> invoke-javacc:
>      [java] Java Compiler Compiler Version 3.2 (Parser Generator)
>      [java] (type "javacc" with no arguments for help)
>      [java] Reading from file C:\LUCENE-CURRENT\SOURCE\lucene-1.4.3 
> \src\java\org
> \apache\lucene\queryParser\QueryParser.jj . . .
>      [java] Warning: Line 608, Column 3: Regular expression for  
> WILDTERM can be
> matched by the empty string ("") in lexical state DEFAULT. This can  
> result in an
>  endless loop of empty string matches.

This warning doesn't look good - though maybe it's harmless in this  
case?

> So i run that command after issuing ant command instead of
> ant -Djavacc.home=c:/javacc javacc.
>
> And the build for that was failed.
>
> And the output is:
>
>     [javac] Compiling 160 source files to C:\LUCENE-CURRENT\SOURCE 
> \lucene-1.4.3\
> build\classes\java
>     [javac] C:\LUCENE-CURRENT\SOURCE\lucene-1.4.3\src\java\org 
> \apache\lucene\ana
> lysis\standard\StandardTokenizer.java:15: cannot find symbol
>     [javac] symbol  : class Reader
>     [javac] location: class  
> org.apache.lucene.analysis.standard.StandardTokenize
> r
>     [javac]   public StandardTokenizer(Reader reader) {

So what's the deal with this?  It looks like something is wrong with  
your environment if it cannot resolve java.io.Reader.

What JDK are you building with?

Others - please feel free to jump in and help out.  I've not got much  
time to do anything but guess on the issue here.

     Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


