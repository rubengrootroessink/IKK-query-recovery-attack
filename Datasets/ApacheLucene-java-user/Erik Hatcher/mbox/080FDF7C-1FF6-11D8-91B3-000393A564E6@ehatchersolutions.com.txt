FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: Tokenizing text custom way
DATE: 26 Nov 2003

On Tuesday, November 25, 2003, at 06:41  AM, Dragan Jotanovic wrote:
> Hi. I need to tokenize text while indexing but I don't want space to 
> be delimiter. Delimiter should be my custom character (for example 
> comma). I understand that I would probably need to implement my own 
> analyzer, but could someone help me where to start. Is there any other 
> way to do this without writing custom analyzer?

You will need to write a custom analyzer.  Don't worry, though.... it's 
quite straightforward.  You will also need to write a Tokenizer, but 
Lucene helps you a lot here.  Lucene's LetterTokenizer is simply this:

public class LetterTokenizer extends CharTokenizer {
   /** Construct a new LetterTokenizer. */
   public LetterTokenizer(Reader in) {
     super(in);
   }

   /** Collects only characters which satisfy
    * {@link Character#isLetter(char)}.*/
   protected boolean isTokenChar(char c) {
     return Character.isLetter(c);
   }
}

You could change the isTokenChar method in your custom CommaTokenizer 
to only return true if the character is not a ','.  And you might want 
to implement the normalize method to lowercase (look at 
LowerCaseTokenizer).

My advice is for you to check out Lucene's source code in the 
TokenStream hierarchy (ctrl-H in IntelliJ is quite nice! :).  
CharTokenizer seems a good starting point for you.  Then have a look at 
SimpleAnalyzer:

public final class SimpleAnalyzer extends Analyzer {
   public TokenStream tokenStream(String fieldName, Reader reader) {
     return new LowerCaseTokenizer(reader);
   }
}

Just create your own CommaAnalyzer that uses your CommaTokenizer 
similar to this.  Have a look at my java.net article and try the sample 
code provided there to observe the analysis process in greater detail 
so you can check that you get what you expect.

> and if I enter 'time' as a search word, I don't want to get "time out" 
> in results. I need exact keyword matching. I would achieve this if I 
> tokenize "time out" as one token while idexing.

It will be a little trickier on the query part if you're using 
QueryParser - you will need to double-quote "time out" for it to work, 
I believe - but don't worry about this until you get the analysis phase 
worked out and then we can revisit the QueryParser issue then.

	Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


