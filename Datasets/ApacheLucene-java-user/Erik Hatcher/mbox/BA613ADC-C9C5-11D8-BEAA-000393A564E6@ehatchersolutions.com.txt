FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: When will Lucene 1.4
DATE: 29 Jun 2004

I'll add a little bit to what Otis said....

On Jun 28, 2004, at 10:08 PM, Karthik N S wrote:
> 2) Will it contain lot's of featured Examples  (lucene1.3-final does 
> not
> have many of features based examples)

It has been my dream to really enhance the examples and initial 
experience users new to Lucene get when opening up a binary Lucene 
distribution.  I had hoped to do really beef up the example application 
(i.e. scrap it and create something much nicer, including a few useful 
applications) as our work on Lucene in Action.

Time has gotten away from us and in order to pragmatically get the book 
done sooner rather than later (and it's already much later than we'd 
like, but at least nicely timed with Lucene 1.4), the example overhaul 
has not been done.

However, all of the source code to our book will be freely available at 
Manning's website (http://www.manning.com/hatcher2) once the book is 
completely done.  When will that be?  Soon!  (that's the best I can 
estimate right now)  The examples we've developed include:

- A robust suite of JUnit tests that demonstrate many features of 
Lucene.  Some tests I've created have been added back to Lucene's own 
test suite where coverage did not already exist.

- A document handler framework, similar but richer than the 
DocumentHandler interface that is part of the 'ant' area of the sandbox 
repository.  This unifies indexing of Word, PDF, HTML, and XML 
documents with an extensible framework to add other handlers.

- A demo Swing application that looks like a cell phone interface which 
uses the WordNet database (except indexed by each words T9 equivalent 
representation) to rapidly look up words that match the numbers keyed 
in.

- A Google-like image search engine web interface (based on Tapestry) 
that I cobbled together this weekend to demonstrate at JavaOne in a few 
hours.

- Odds and ends that demonstrate computing term vector angles to do 
some rudimentary latent semantic analysis,  using custom geographic 
distance (based on the users location) sorting to order search results, 
an example of using JUnitPerf (contributed by Mike Clark himself) to 
benchmark Lucene performance and, for example, demonstrate issues that 
can happen when indexing dates using DateField when you really only 
care about month, day, and year, and probably a few other goodies I'm 
forgetting at the moment.

I will do my best to get this code packaged into a releasable state as 
soon as possible (by the end of July is the best I can promise) and 
made available prior to the book itself being available.  Again, the 
code for the book will be freely available, of course with the hope 
that it'd spark interest in purchasing a copy of the book itself.  
Where it fits, I'm fine with any of that code being added to Lucene or 
the sandbox too.

It is still my intention, once my work is complete with the book, to 
devote my free time to fleshing out a much nicer example suite to ship 
with Lucene.

> [ The major Concern for our Organization, since we plan to move our 
> Code
> from lucene1.3 final to 1.4 final ]

I too suggest that you go ahead and give the latest 1.4 RC release a 
try and base on that.  You will more than likely find it is as stable 
as 1.3 and if you run into any issues you can report them and get them 
fixed in 1.4 final.  The alternative is for you wait and base on 1.4 
final and that one undiscovered bug that you would have found earlier 
is now in the final release!  :)

	Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


