FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: LuceneRAR project announcement
DATE: 19 Jan 2005

On Jan 19, 2005, at 3:30 PM, Joseph Ottinger wrote:
> On Wed, 19 Jan 2005, Erik Hatcher wrote:
>
>> On Jan 19, 2005, at 2:27 PM, Joseph Ottinger wrote:
>>> After babbling endlessly about an RDMS directory and my lack of 
>>> success
>>> with it, I've created a project on java.net to create a Lucene JCA
>>> component, to allow J2EE components to interact with a Lucene 
>>> service.
>>> It's at https://lucenerar.dev.java.net/ currently.
>>
>> Could you elaborate on some use cases?
>
> Sure, and I'll pick the one that's been driving me along:
>
> I have a set of J2EE servers, all of which can generate new content for
> search, and all of which will be performing searches. They're on 
> separate
> machines. Sharing directories isn't my idea of "doing J2EE correctly."

"doing J2EE correctly" is a funny phrase.   If sharing directories 
works and gets the job done right, on time, under budget, can be 
adjusted later if needed, and has been reasonably well tested, then 
you've done it "right".  And since its in Java and not on a cell phone, 
its basically "J2EE".

Also, what about using Lucene over RMI using the RemoteSearchable 
facility built-in?

> Therefore, I chose to represent Lucene as an enterprise service, one
> communicated to via a remote service instead, so that every module can
> communicate with Lucene without realising the communication layer... 
> for
> the most part.

And this is where I think the abstraction leaks.

The Nutch project has a very scalable "enterprise" approach to this 
type of remote service also.

>  Plus, I no longer violate my purist's sensibilities.

Ah, now we get to the real rationale!  :)

I'm not giving you, personally, a hard time, really ... but rather this 
purist approach, where "purist" means fitting into the acronyms under 
the J2EE umbrella.  I've been there myself, read the specs, and cringed 
when I saw file system access from a session bean, and so on.

> The Hits object could CERTAINLY use optimization - callbacks into the
> connector would probably be acceptable, for example.

Gotcha.  Yes, callbacks would be the right approach with this type of 
abstraction.

>> JCA sounds like an unnecessary abstraction around Lucene - though I'm
>> open to be convinced otherwise.
>
> I'm more than happy to talk about it. If I can fulfill my needs with no
> code, hey, that's great!

Would RemoteSearchable get you closer to no code?

>  I just haven't been able to successfully do so
> yet, and everyone to whom I've spoken who says that they HAVE 
> managed...
> well, they've almost invariably done so by lowering the bar a great 
> deal
> in order to accept what Lucene requires.

I'm definitely a skeptic when it comes to generic layers on top of 
Lucene, though there is definitely a yearning for easier management of 
the lower-level details.

I'll definitely follow your work with LuceneRAR closely and will do 
what I can to help out in this forum.  So take my feedback as 
constructive criticism, but keep up the good work!

	Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


