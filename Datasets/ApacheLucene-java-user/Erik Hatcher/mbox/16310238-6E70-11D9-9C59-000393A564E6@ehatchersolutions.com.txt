FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: Sort Performance Problems across large dataset
DATE: 25 Jan 2005

On Jan 24, 2005, at 7:01 PM, Peter Hollas wrote:
> I am working on a public accessible Struts based

Well there's the problem right there :))

(just kidding)

> To sort the resultset into alphabetical order, we added the species 
> names as a seperate keyword field, and sorted using it whilst 
> querying. This solution works fine, but is unacceptable since a query 
> that returns thousands of results can take upwards of 30 seconds to 
> sort them.

30 seconds... wow.

> My question is whether it is possible to somehow return the names in 
> alphabetical order without using a String SortField. My last resort 
> will be to perform a monthly index rebuild, and return results by 
> index order (about a day to re-index!). But ideally there might be a 
> way to modify the Lucene API to incorporate a scoring system in a way 
> that scores by lexical order.

What about assigning a numeric value field for each document with the 
number indicating the alphabetical ordering?  Off the top of my head, 
I'm not sure how this could be done, but perhaps some clever hashing 
algorithm could do this?  Or consider each character position one digit 
in a base 27 (or 27 to include a space) and construct a number for 
that?  (though that would be an enormous number and probably too large) 
- sorry my off-the-cuff estimating skills are not what they should be.

Certainly sorting by a numeric value is far less resource intensive 
than by String - so perhaps that is worth a try?  At the very least, 
give each document a random number and try sorting by that field (the 
value of the field can be Integer.toString()) to see how it compares 
performance-wise.

	Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


