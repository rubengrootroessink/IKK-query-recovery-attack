FROM: Erik Hatcher <e...@ehatchersolutions.com>
SUBJECT: Re: Sequential match query
DATE: 12 Apr 2009


On Apr 11, 2009, at 9:11 PM, Tim Williams wrote:

> On Sat, Apr 11, 2009 at 12:25 PM, Erick Erickson
> <erickerickson@gmail.com> wrote:
>> That'll teach me to scan a post. The link I sent you
>> is still relevant, but wildcards are NOT intended to be used to
>> concatenate terms. You want a phrase query or a span query
>> for that. i.e. "A C F"~# where # is the "slop", that is, the number
>> of other terms allowed to appear between your desired terms.
>>
>> SpanQueries are constructed programmatically, and PhraseQueries
>> are produced by the parser.
>
> As I understand it though, there's no way to use the queryparser to
> construct an *ordered* phrase query with slop (which is what I think
> he's after), right?  I gather that'd have to be done manually with a
> SpanNearQuery.  I'd love to hear that the query parser has syntax for
> this though...

QueryParser does not create any SpanQuery's, but one can subclass  
QueryParser and override getFieldQuery() to put in a SpanQuery instead  
of a PhraseQuery.

	Erik


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


