FROM: Robert Stewart <Robert.Stew...@INFONGEN.COM>
SUBJECT: RE: Fastest way to get just the "bits" of matching documents
DATE: 28 Jul 2008

BTW, we use Lucene .NET not Java currently, so version is 1.9.  Unfortunately we donâ€™t have
"setAllowDocsOutOfOrder" but do have "useScorer14" which is almost the same thing for some
queries. I did not see much improvement and for other queries it was slower.  We are stuck
on 1.9 due some stability issues (memory leaks?) in 2.0+ of the .NET port.

What I did finally, was pre-load fields which have a limited set of unique values into memory
(using BitArray for >= num_docs/8, and SortedVIntList for < num_docs/8).  Then I "optimize"
incoming queries by replacing instances of TermQuery for those fields with my own "CachedTermQuery"
objects which have custom weight and scorer classes which use the cached field data.


-----Original Message-----
From: Paul Elschot [mailto:paul.elschot@xs4all.nl]
Sent: Saturday, July 26, 2008 3:48 PM
To: java-user@lucene.apache.org
Subject: Re: Fastest way to get just the "bits" of matching documents

Op Thursday 24 July 2008 23:00:33 schreef Robert Stewart:
> Queries are very complex in our case, some have up to 100 or more
> clauses (over several fields), including disjunctions and prohibited
> clauses.

Other than the earlier advice, did you try setAllowDocsOutOfOrder() ?

Regards,
Paul Elschot

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org

