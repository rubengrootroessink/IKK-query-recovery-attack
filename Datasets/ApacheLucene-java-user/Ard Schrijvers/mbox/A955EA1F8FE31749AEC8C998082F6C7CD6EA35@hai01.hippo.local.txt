FROM: "Ard Schrijvers" <a.schrijv...@hippo.nl>
SUBJECT: RE: Calling indexWriter.close() in web app
DATE: 12 Jul 2007

Hello,
> 
> The lock file is only for Writers. The lock file ensures that 
> even two 
> writers from two JVM's will not step on each other. Readers 
> do not care 
> about what the writers are doing or whether there is a lock 
> file...

Is this always true? The deleteDocuments method of the IndexReader will throw a LockObtainFailedException
when another writer has the index open. 

It might be confusing that from a reader you can delete documents. IIRC, the thing above will
only hold when you only use a reader for reading.

Regards Ard

> even 
> more so with the new generational files i believe.
> 
> - Mark
> 
> vcampa wrote:
> > Steinert, Fabian wrote:
> >   
> >> Hi,
> >> you do not need to writer.close() the IndexWriter at all 
> to make changes
> >> visible.
> >> When IndexWriter is constructed with autoCommit = true flag set,
> >> calling writer.flush() will do.
> >>
> >>     
> >
> > Ok, but what about the write.lock? IndexWriter releases its 
> write.lock only
> > when closed, so i think problems may begin when i try to 
> open IndexReader on
> > a locked index. I'm still confused... help.
> >
> >   
> 
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
> 
> 

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


