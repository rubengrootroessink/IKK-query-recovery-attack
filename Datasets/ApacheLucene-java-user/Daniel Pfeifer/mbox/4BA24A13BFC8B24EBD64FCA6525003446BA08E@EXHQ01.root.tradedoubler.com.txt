FROM: "Daniel Pfeifer" <Daniel.Pfei...@tradedoubler.com>
SUBJECT: Re: Two strange things in Lucene
DATE: 27 Jan 2006

>> Since I didn't find anything in the log from log4j I did a "kill  
>> -3" on
>> > the process and found two very interesting things:
>> 
>> Almost all multisearcher threads were in this state:
>> 
>> "MultiSearcher thread #1" daemon prio=10 tid=0x0000000001900960
>> nid=0x81442c waiting for monitor entry
>> [0xfffffd7d269ff000..0xfffffd7d269ffb50]
>>      at java.util.Vector.size(Vector.java:270)
>>      - waiting to lock <0xfffffd7f0114ea28> (a java.util.Vector)
>>      at
>> org.apache.lucene.search.BooleanQuery$BooleanWeight.<init> 
>> (BooleanQuery.
>> java:95)
 
> I don't know about this one, but guessing that it just happens to be  
> a normal state of the system when you killed the process.  *shrugs*
 
You probably missed the -3 parameter. This just dumps the state of the
virtual machine, it doesn't actually kill the JVM. Thus I believe that
this is not a normal state.
 
>> And, additionally I found another stacktrace in the stdout-log which
I
>> find interesting:
>> 
>> Exception in thread "MultiSearcher thread #1"
>> org.apache.lucene.search.BooleanQuery$TooManyClauses
 
> This is a typical occurrence when using Query's that expand such as  
> WildcardQuery, RangeQuery, FuzzyQuery, etc.  If users are doing  
> queries like a* and there are over 1024 terms that start with "a"  
> then you will, by default, blow up WildcardQuery's expansion into a  
> BooleanQuery.  You can up that limit on BooleanQuery, or disallow  
> those types of queries perhaps.
 
Ok, I'll see what I can do.
 
Thanks!

