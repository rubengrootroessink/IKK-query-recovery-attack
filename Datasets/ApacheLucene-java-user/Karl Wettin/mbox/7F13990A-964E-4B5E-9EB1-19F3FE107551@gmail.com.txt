FROM: Karl Wettin <karl.wet...@gmail.com>
SUBJECT: Re: Scoring filters
DATE: 11 Jun 2008


11 jun 2008 kl. 09.14 skrev Paul Elschot:
> Op Wednesday 11 June 2008 01:41:38 schreef Karl Wettin:
>> Each of my filters represent single boosting term queries. But when
>> using the filter instead o the boosting term query I loose the score
>> (not sure this is true) and payload boost (if any), both essential
>> for the quality of my results. If I was to add payloads to the bits
>> that are set, what is the best or simplest way to get the score back
>> in? How about wrapping each filter in a query?
>>
>> Are there any obvious problems with this strategy that I've missed?
>
> Why not add the boosting term queries as required
> to a BooleanQuery? This has the advantage that it uses the
> index data and the various caches built into Lucene and the
> underlying OS.

It used to be like that. But some of my terms occurs in 50% of all the  
documents and it took a very long time to match them, so I replace any  
such clause with a filter.

> In case you have the memory available, it is also possible to keep
> the score values of any Query with the Filter and implement a Scorer
> using the filter docs and these score values. Then use this as the
> scorer for a new Query, via a Weight.
> Once this new Query is available, just add it as required to a
> BooleanQuery.

That I'll do. Thanks!


           karl

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


