FROM: Paul Taylor <paul_t...@fastmail.fm>
SUBJECT: Deciding on strategy for storing indexed fields
DATE: 30 Nov 2009

Currently in our Lucene Search we have a number of distinct fields that 
are indexed and stored, so that the fields can be searched and we can 
then construct an xml representation of the match 
(http://wiki.musicbrainz.org/Next_Generation_Schema/SearchServerXML) but 
on further reading it appears that the field is stored twice quite 
independently ,  and sometimes we store '-' fields  just so that we can 
match up pairs of fields 
(http://wiki.musicbrainz.org/User:Murdos/NGS_Search_Server). I'm 
wondering if it would make sense (and actually use less space) to have 
the same indexed fields but only have one stored field which could be a 
serialized representation of the JAXB class we use to output the xml for 
the matches. This could have the additional benefit that on doing a 
search the JAXB classes for returing the matching results are already 
created so the search would be quicker.

Is this a good idea ?

thanks Paul

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


