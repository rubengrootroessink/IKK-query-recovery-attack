FROM: Nicolas Maisonneuve <n.maisonne...@gmail.com>
SUBJECT: Re: lucene index with structured fields
DATE: 9 Mar 2005

hmm a idea  would be to create dynamically a boost table  (field,
boostvalue) in a extended version of a TermQuery depending on the
field:
ex: StructuredTermQuery ("search2", "coco")

1-> Update a boost table according to:

*  the virtual structure :

> -structured index
> search1
>    search2
>         search4
>    search3
>         search5

*  the fact the score is decrease with the dept :

*  the search field argument, here "search2"

So for this exemple the table would be =  (search1_boost=0,
search2_boost=1, search3_boost=0, search4_boost=0.7)

2- According to the table , a new Query is created with just non zero
boost search field search2:coco^search1_boost 
search4:coco^search2_boost

WDYT ?

other proposals more flexible, clever, faster ? 

nicolas maisonneuve

On Wed, 9 Mar 2005 18:29:12 +0100, Nicolas Maisonneuve
<n.maisonneuve@gmail.com> wrote:
> hy everybody,
> 
> I would like use a index with structured search field.
> 
> - flat index (lucene type)
> searchfield1
> searchfield2
> searchffield3
> ...

> 
> to allow simple extensions of some search features:
> - the query TermQuery("search2", "coco" )  search in search2 and
> search4 fields,
> - The score depend of the depth where the word is found : A document
> where "coco" is found in search4 field has a score lower than a
> document with "coco" found in search2
> 
> How {do with,hack} lucene to integrated easily this notion of
> structured field  ? (no fuzzy methods allow because of the
> performance) ?
> 
> thanks in advance,
> 
> Nicolas Maisonneuve
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


