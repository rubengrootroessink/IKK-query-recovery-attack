FROM: adasal <adam.salt...@gmail.com>
SUBJECT: Re: Use the lucene for searching in the Semantic Web.
DATE: 19 Jan 2006

Presumably because this is the way of formulating an inductive statement.
Just entering key words doesn't introduce the notion of a relationship
between some known and some other unknown terms.

> Queries match graph patterns against the target graph of the query.


From http://www.w3.org/TR/2004/WD-rdf-sparql-query-20041012/
In other words there is an homorphic relationship between the target graph
querry and its solution.
And forming a querry implies knowledge of the dataset. It is not knowledge
a=of an SQL like language that is required, but some knowledge of the data
set that the language conveys. So the solution to doing this in one step
would have to include some representation of the data set to the user, or an
automatic mapping from the arbitrary query to the data. It seems to me that
this would be difficult to accomplish as it contains the problem of how the
meta data is defined. For instance if it is an ontology but it uses the term
partner for all sorts of couples from friends to married partners. (This
might have been right when defining the ontology, for instance of use for
hospital information cards where what is meant is the person who might be
with you at the time of the, say not very serious, procedure.)
Defining synonyms after the event, or using statistical contextual analysis
for same may help, but these are the problems as I see them.
Adam

On 18/01/06, xing jiang <gingerons@gmail.com> wrote:
>
> Hi,
>
> I think one problem of the existing method is that, to query on the RDF
> files or similar structures, we have to form SQL like queries. However,
> for
> searching in the text files, we only need to type several keywords. Can we
> combine the two methods and how can we combine the two methods. For
> instance, i only need to enter some keywords. Then, the system can handle
> the left process. Why do we have to learn some SQL like language for
> searching in the Semantic Web.
>
> regards
> Jiang Xing
>
>
> On 1/18/06, Klaus <klaus@vommond.de> wrote:
> >
> > Hi Jiang,
> >
> > I'm currently facing a similar problem. Up to now I have to use for the
> > semantic query a graph matching algorithm, but the fulltext search in
> the
> > semantic web is performed by lucene.
> > At first I wrote the whole text into a one index. The document contains
> > one
> > field for the unique id and on for the whole text. For the semantic
> markup
> > I
> > use an extra index. Every rdf triple will result in a document with the
> > following fields id, predicate + subject + object. Every query is
> executed
> > on both indexes. I use an extra index for the rdf data, because this
> > results
> > in a higher score for the documents. You might argue that this would
> > adulterate the result, but from me point of view explicit Meta data
> should
> > be higher scored then terms in document body.
> >
> > Cheers,
> >
> > Klaus
> >
> > -----UrsprÃ¼ngliche Nachricht-----
> > Von: jason [mailto:gingerons@gmail.com]
> > Gesendet: Dienstag, 17. Januar 2006 15:35
> > An: java-user@lucene.apache.org
> > Betreff: Use the lucene for searching in the Semantic Web.
> >
> > Hi friends,
> >
> > How do you think use the lucene for searching in the Semantic Web? I am
> > trying using the lucene for searching documents with ontological
> > annotation.
> > But i do not get a better model to combine the keywords information and
> > the
> > ontological information.
> >
> > regards
> > jiang xing
> >
> >
> > ---------------------------------------------------------------------
> > To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> > For additional commands, e-mail: java-user-help@lucene.apache.org
> >
> >
>
>
> --
> Regards
>
> Jiang Xing
>
>
