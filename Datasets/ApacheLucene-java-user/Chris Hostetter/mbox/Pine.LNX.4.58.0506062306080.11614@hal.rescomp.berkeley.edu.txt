FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: Fastest way to fetch N documents with unique keys within large numbers of indexes..
DATE: 7 Jun 2005


: was computing the score.  This was a big performance gain.  About 2x and
: since its the slowest part of our app it was a nice one. :)
:
: We were using a TermQuery though.

I believe that one search on one BooleanQuery containing 20
TermQueries should be faster then 20 searches on 20 TermQueries.

: >2) have you tried sorting your terms first, then opening a TermDocs on the
: >   first one, and seeking to each of the remaining terms?  it seems like
: >   that would be faster then opening a new TermDocs for each Term.
: >
: >
: How do I do this?  I just assumed that termDocs was already sorted...
:
: I don't see any mention of this in the API...

I'm not talking about any special API to sort a TermDocs -- it is sorted.

I'm saying you should start by sorting your input (the 10-20 unique IDs
you mentioned) and then seek to the first ID, then using the same
TermDocs instance, seek to the second ID, etc....


-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


