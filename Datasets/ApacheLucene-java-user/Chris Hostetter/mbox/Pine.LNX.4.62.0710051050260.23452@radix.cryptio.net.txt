FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: Generalized proximity query performance
DATE: 5 Oct 2007

: I am using a hand rolled query of the following form (implemented with
: SpanNearQuery, not a sloppy PhraseQuery):
: a b c => +(a AND b AND c) OR "a b"~5 OR "b c"~5
: 
: The obvious solution, "a b c"~5, is not applicable for my issues, because I
: would like to allow for the possibility that a and b are near each other in
: one field, while c is in another field.

Hmmm.. can you give some more concrete examples of what you mean by this?  
both in terms of the use case you are trying to satisfy, and in terms of 
how your current code works ... you don't have to post code or give away 
trade secrets, just describe it as a black box (ie: what is the input?, 
how do you know when to use fieldA vs fieldC,how do you decide when to 
make a span query vs an OR query?

based one what youv'e described so far, it's hard to udnerstand what it is 
you are doing -- which is important to udnerstand how to help you make it 
better/faster.

: Somewhat arbitrary benchmarks.

they do seem fairly arbitrary, especially since there are no units on the 
numbers, and no indication as to what "before" and "after" refer to...


: --------------
: Before:
: $ ./bench.rb "paris hilton"
: 0.022000   0.000000   0.022000 (  0.021000)
: $ ./bench.rb "paris hilton goes to jail"
: 0.024000   0.000000   0.024000 (  0.024000)
: 
: After:
: $> ./bench.rb "paris hilton"
: 0.103000   0.000000   0.103000 (  0.103000)
: $> ./bench.rb "paris hilton goes to jail"
: 1.514000   0.000000   1.514000 (  1.513000)




-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


