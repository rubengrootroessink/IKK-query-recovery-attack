FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: Different scoring mechanism
DATE: 10 Jun 2006


: Higher level optimizations that do query transformations are left as
: an exercise to the application :-)

Word!

For example, Yonik helped me speed up a fairly hairy query i had a while
back by realizing that the way i was progromatically generating a query,
one deeply nested clause was actually constant even though the wrapper
around it changed depending on the input, and it was mainly a "match all
docs, except things that amtch a, b, c" type query -- so we converted it
to a Filter, wrapped it in in a CachingWrapperFilter, then wrapped that in
a FilteredQuery -- majorly speed things up.

in general, the best optimization I've seen is to identify the parts of
your query that aren't really about scoring as much as they are about
filtering -- and convert them to Filters which can be cached.  usually
they can be applied using the normal search(Query,Filter) methods -- but
even if they are conditions that you have nested deep down like the one i
described, don't be afraid to go crazy :)


-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


