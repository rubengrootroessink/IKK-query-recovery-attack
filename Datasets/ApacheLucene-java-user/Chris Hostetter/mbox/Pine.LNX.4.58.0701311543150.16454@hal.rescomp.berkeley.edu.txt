FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: Boost/Scoring question
DATE: 31 Jan 2007


: Thanks for the comments.  Where I was trying to get to was whether a match on a
: field with boost of 0.0 can ever cause the normalised score to result in 0 if
: there is also a match on a field with a non zero boost.  I'm not sure I
: understand the scoring formula :(

well .. it gets more complicated ... last time i checked, using the Hits
API, even if something matches, but matches with score <= 0, then it's not
included in the results (it is registered as a match when using
HitCollector)

so you could theoretically have a query where the raw score is *negative*
but a document matches.

: If I search for a document where the field boost is 0.0 then the document is not
: found I just search that field.  Is this expected???

you mean you search on:       A^0    and get no results even though
documents contain A, and if you search on:       +A^0  B^1     you see
those documents?

that would be that odd part of the Hits behavior i was describing above --
it's all there to try and meet the expecations of people that scores will
be between 0 and 1 (and in simple cases most people using Hits care about,
scores shouldn't be negative, so assume negative scores are non-matches)

: I have a configurable framework, where the field schema can have the boost set
: and I am trying to understand whether to allow >=0.0 of just >0.0 and how Lucene
: behaves with 0.0.

if you plan on using Hits, i would suggest requiring that boosts be >0 ..
if you want to start dealing with raw scores, then boosts can definitely
be 0.


-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


