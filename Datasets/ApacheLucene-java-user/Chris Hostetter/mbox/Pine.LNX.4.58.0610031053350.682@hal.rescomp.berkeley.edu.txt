FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: MultiFieldQueryParser vs concatenated field
DATE: 3 Oct 2006


: Well, as always, it depends <G>... My first thought is that I'd index things
: in separate fields as it gives you more options. For instance, let's say
: that you have name and phone fields and decide that the name field is more
: important than the phone number. Your options for boosting "anything in the
: name field" are better if it's indexed separately.

I owuld agree with Erick, for the same reasons he outlined ... in my
opinion the level of control you get when having seperate pieces of data
about your documents in seperate fields is crucial to getting good results
-- as long as you are willing to spend the time figuring out the "best"
query structure and boosts to use on your various fields.

It also gives you the ability to use differnet analyzers on different
types of data -- the anaylyzer you use on a street address may not be the
best analyzer to use on a persons name, etc.

I frequently store the same piece of data in several fields, each with a
differnet analyzer so that i improve the chances of matching on different
variations of user input that might not be parsed properly.

that said: having one big uber field for doing "quick" queries is
certainly nice ... so unless your index is so big that saving every little
extra byte in every document is important, why not do both?

: > In my application I need to implement search across several fields.
: >
: > What is better approach in term of relevance scoring:
: > Index in separate fields and search using MultiFieldQueryParser or index
: > everything as concatenated field an search using this field?



-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


