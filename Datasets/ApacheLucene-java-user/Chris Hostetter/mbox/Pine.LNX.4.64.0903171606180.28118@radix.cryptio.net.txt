FROM: Chris Hostetter <hossman_luc...@fucit.org>
SUBJECT: Re: sloppyFreq question
DATE: 17 Mar 2009


: > I suppose SpanTermQuery could override the weight/scorer methods so that
: > it behaved more like a TermQuery if it was executed directly ... but
: > that's really not what it's intended for.
: 
: This is currently the only way to boost a term via payloads.
: BoostingTermQuery extends SpanTermQuery.

probably because it was the easiest way to get at the payload ... another 
reason to cahnge SpanTermQuery's weight i guess.

: > if you're talking about a SpanNearQuery of "the quick brown fox" vs a
: > SpanNearQuery of "brown fox" -- both against some doc like "hey look, the
: > quick brown fox jumped very high" -- then sure, that doc might produce a
: > lower score for the first query then it does for the second query ... but
: > scores from differnet queries aren't comparable.
: 
: Yes, this is the case I meant. To the casual observer, they both appear to
: be "exact matches' with respect to term frequency. However, I realize that
: the first query would score higher than the 2nd if all 4 terms were indexed
: at the same position. I guess this is part of the point you're making about
: spans. Would a plain PhraseQuery behave this way, too?

i think you're missing my point -- it's not specific to spans: it doesn't 
mean *anything* to say "the first query would score higher then the 2nd" 
because scores aren't comparable between queries.  (unless you really go 
out of your way to make them comparable by customizing Similarity, and 
ensuring that they have hte exact same structure -- a SpanNearQuery 
containing 5 SpanTermQueries doesn't have the same structure as a 
SpanNearQuery containing two SpanTermQueries)



-Hoss


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


