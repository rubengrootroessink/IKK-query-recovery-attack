FROM: Schreiner Wolfgang <Wolfgang.Schrei...@itsv.at>
SUBJECT: Lucene applicability
DATE: 25 Aug 2010

Hi all,

We are currently evaluating potential search frameworks (such as Hibernate Search) which might
be suitable to use in our project (using Spring, JPA with Hibernate) ...
I am sending this E-Mail in hope you can advise me on a few issues that would help us in our
decision making process.


1.)    Is Lucene suitable for full text database searches? I read Lucene was designed to index
and search documents but how does it behave querying relational data sets in general?

2.)    Can we make assumptions on query performance considering combined searches, range queries
or structured data and wildcard searches? If we consider a data structure consisting of say
3 tables and each table contains a few million entries (e.g. first name, last name and address
fields) and we search for common values (such as 'John', 'Smith' and 'New York') where

a.       each value for itself and each combination would result in millions of hits

b.      a person can have multiple first names and we want to make sure to receive any combination
of the last name with any first name

c.       we search for a last name and a range of birth dates

3.)    Transaction safety: How does Lucene handle indexes? If we update data model and index,
what happens to the index if anything goes wrong as soon as the data model has been persisted?

I hope I made the issues clear to you, just some general thoughts about how Lucene would behave
in a real world application scenario ... Any support or pointers to helpful documents or Web
links are highly appreciated!
Cheers for now,

w


