FROM: "Herbert Roitblat" <h...@orcatec.com>
SUBJECT: _dumpRefs problem, tracking heap leak
DATE: 10 Apr 2010

I'm trying to get a listing of the Java items that Python is holding.
I tried this:
print lucene.JCCEnv._dumpRefs(classes=True).items()
I get the message:

'_dumpRefs' of 'jcc.JCCEnv' object needs an argument

What argument does it need?

The heap histo gave me this:

num       #instances    #bytes  Class description
--------------------------------------------------------------------------
1:              19996937        812894352       char[]
2:              19995642        799825680       java.lang.String
3:               871    12786192       int[]
4:              10239   1366600 * ConstMethodKlass
5:              10239   1236264 * MethodKlass
6:              897     958096  * ConstantPoolKlass

Overall, the heap seems to be filling up and won't clear, so I am guessing 
that it is shared references that are not getting cleaned up.

I presented some background earlier.  I am repeating it here because this is 
a different question/thread. Ruben gave me some good suggestions, that's how 
I got the heap histogram.

Hi, folks.
I am using PyLucene and doing a lot of get tokens.  lucene.py reports 
version 2.4.0.  It is rpath linux with 8GB of memory.  Python is 2.4.
I'm not sure what the maxheap is, I think that it is maxheap='2048m'.  It's 
running in a 64 bit environment.
It indexes a set of 116,000 documents just fine.
Then I need to get the tokens from these documents and near the end, I run 
into:

java.lang.OutOfMemoryError: GC overhead limit exceeded

Thanks so much.
Herb 


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


