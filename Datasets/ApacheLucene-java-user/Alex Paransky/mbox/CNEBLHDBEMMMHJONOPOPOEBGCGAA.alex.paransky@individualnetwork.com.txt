FROM: "Alex Paransky" <alex.paran...@individualnetwork.com>
SUBJECT: RE: A method for "de-boosting" a term...
DATE: 24 Oct 2001

Doug the changes you have sent work GREAT in my case.

Thanks
Alex Paransky

PS:

1. I was not able to use patch 2.5 to incorporate the .diff file you sent
me, so my changes were done by hand.  I double checked the final diff
against what you send me and they are the same.  I am not too familiar with
the patch program so if there are any options I need to use please tell me.
Here is the patch session from my machine:

C:\work\individualnetwork\external\lucene-1.2-rc1-fix>"\Program
Files\GNU\WinCvs 1.2\patch" -i c:\diffs.dat
patching file `src/java/org/apache/lucene/queryParser/QueryParser.jj'
Assertion failed: hunk, file patch.c, line 321

abnormal program termination

2. Another minor addition would be to make Query and Terms implement a
java.io.Serializable.  We are currently in a process of incorporating Lucene
into an EJB application, and we have a Statefull Session Bean object called
SearchResults which should accept a Query and search the collection
(SearchResults basically wraps IndexSearcher), however, because Query/Term
is not Serialiable, we are forced to execute .toString() and then attempt to
use a parser to rebuild the result.  The problem with this is that parser
does not offer the type of flexibility that we can get from directly
buidling Query/Term structures (for example, some of the values have spaces
in them, so the parser sees field:value1 value2 value3 and does not
correctly interpret this as field:"term(value1) term(value2) term(value3)",
however if we use quotes, we get a PhraseQuery instead of TermQuery we are
looking for).  Should this be an enhancement that I should mention in the
bugzilla, or would this e-mail suffice?

Again, thanks for your help.
-AP_

-----Original Message-----
From: Doug Cutting [mailto:DCutting@grandcentral.com]
Sent: Wednesday, October 24, 2001 12:47 PM
To: 'Alex Paransky'; lucene-user@jakarta.apache.org
Subject: RE: A method for "de-boosting" a term...


Alex,

Can you please supply a simple reproducible example?  When I set the boost
for a term to zero then documents containing it do not come to the top.  Nor
do they go to the bottom.  The boost is multiplied into the weight for the
term, but the weights are then added into the document score, so a zero
boost will have little effect on the final ranking.

Lucene does not currently support negative boosts, which might achieve what
you want.  I just made the modifications to required to support negative
boosts.  Please find these attached and tell me how they work.  If they work
then I will check them in after the 1.2 release is final.

Doug



