FROM: Eric Jain <Eric.J...@isb-sib.ch>
SUBJECT: Re: CachedQuery
DATE: 10 Jun 2004

> How about the new FilteredQuery (added in the latest Lucene 1.4 release 
> - or earlier?).  I'm not sure it would suffice for that particular query 
> though.  It would, however, work well for:
> 
>     foo OR (bar:yes AND xyz)
> 
> as you could use a QueryFilter on bar:yes nested in a FilteredQuery with 
> a TermQuery for xyz, and then wrapped in a BooleanQuery as two 
> non-required clauses.  As for QueryParser... FilteredQuery is not 
> currently supported, although you could perhaps inject it by subclassing 
> (?).

Unfortunately it is also possible (and frequent) for the entire query to 
be nothing but

   bar:yes

in which case the FilteredQuery approach wouldn't work, as far as I can 
see. On the other hand, I just realize that caching query objects won't 
do any good either, as most work is done when the score method of the 
query object is called (wild speculation).

Perhaps what I need is some kind of rule-based query optimizer...

---------------------------------------------------------------------
To unsubscribe, e-mail: lucene-user-unsubscribe@jakarta.apache.org
For additional commands, e-mail: lucene-user-help@jakarta.apache.org


