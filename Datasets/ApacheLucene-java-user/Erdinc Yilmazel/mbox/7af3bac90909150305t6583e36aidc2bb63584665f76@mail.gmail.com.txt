FROM: Erdinc Yilmazel <erdincyilma...@gmail.com>
SUBJECT: Re: Run your Lucene Applications on Google AppEngine with GAELucene
DATE: 15 Sep 2009

This is great news! Are you happy with the the performance of the google
data store? Do you plan to support in memory indexes using the memcache api?

Thanks

On Mon, Sep 14, 2009 at 5:04 PM, Kerang Lv <lvkrnewer@yahoo.com> wrote:

> Hi Lucene users,
>
> Enlightened by the discussion "Can I run Lucene in google app engine? [
> http://www.nabble.com/Can-I-run-Lucene-in-google-app-engine--td23017742.html],
> I implemented a google datastore based Lucene component, GAELucene, which
> can help you to run search applications on google app engine.
>
> The main clazz of GAELucene include:
>    * GAEDirectory - a read only Directory based on google datastore.
>    * GAEFile - stands for an index file, the file's byte content will be
> splited into multi GAEFileContent.
>    * GAEFileContent - stands for a segment of index file.
>    * GAECategory - the identifier of different indices.
>    * GAEIndexInput - a memory-resident IndexInput? implementation like the
> RAMInputStream.
>    * GAEIndexReader - wrapper for IndexReader? that cached in
> GAEIndexReaderPool
>    * GAEIndexReaderPool - pool for GAEIndexReader
>
> The following code snippet demonstrates the use of GAELucene do searching:
>  Query queryObject = parserQuery(request);
>  GAEIndexReaderPool readerPool =GAEIndexReaderPool.getInstance();
>  GAEIndexReader indexReader = readerPool.borrowReader(INDEX_CATEGORY_DEMO);
>  IndexSearcher searcher =newIndexSearcher(indexReader);
>  Hits hits = searcher.search(queryObject);
>  readerPool.returnReader(indexReader);
>
> You can find more here 'http://code.google.com/p/gaelucene/'
>
>
>
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

