FROM: Benjamin Heilbrunn <ben...@gmail.com>
SUBJECT: Re: Lucene computes an automatic boost based on the number of tokens	in the field (shorter fields have a higher boost) ?
DATE: 12 Jan 2010

This is because matches in short fields (few terms) als typically more
pregnant, than matches in long fields (much terms).

Imagine the case with two fields named "title" and "content"
representing the title and the content of books.
If you match three search terms in a five terms title this is a better
hit than if you match those three search terms in the content of the
book.

The length normalization factor is calculated by your Similarity
implementation in the method
public float lengthNorm(String fieldName, int numTokens)

Does that help you?

2010/1/12 Paul Taylor <paul_t100@fastmail.fm>:
>
>
> Why is this , and how much is this (in plain english ) please ?
>
> thanks Paul
>
>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


