FROM: "John Wang" <john.w...@gmail.com>
SUBJECT: Re: IndexReader.reopen memory leak
DATE: 29 May 2008

Yes, I do close the old reader.
I have a large index, my system is doing real time updates: 1 thread writing
batches of updates to the index, after each index update, it updates the
reader. I have two readers open always, one is serving the search requests,
while the other updates and the two flips. Reader update implies index
reopen here.

I am using my implementation of a FilteredIndexReader.

Index leaks very slowly, but obvious.

No, I am not able to provide heap dumps.

-John

On Wed, May 28, 2008 at 4:23 PM, Mark Miller <markrmiller@gmail.com> wrote:

> As someone that has done a lot of reopens, I can vouch there is no leak
> under simple, normal usage. Are you sure your closing the original reader
> after getting the reopened reference?
>
>
> Michael Busch wrote:
>
>> Hi John,
>>
>> hmm not good. I will take a look. It has probably to do with the reference
>> counting. Are you doing anything special? E. g. do you have own reader
>> implementations that you call reopen() on? What kinds of readers are you
>> using?
>>
>> Are you maybe able to provide a heapdump?
>>
>> -Michael
>>
>> John Wang wrote:
>>
>>> Hi:
>>>
>>>  We are experiencing memory leak with calling IndexReader.reopen().
>>>
>>>   From eyeballing the lucene source code, I am seeing normCache is not
>>> cleared.
>>>
>>>
>>>   Anyone else experiencing this?
>>>
>>> Thanks
>>>
>>> -John
>>>
>>>
>>
>> ---------------------------------------------------------------------
>> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
>> For additional commands, e-mail: java-user-help@lucene.apache.org
>>
>>
>
> ---------------------------------------------------------------------
> To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
> For additional commands, e-mail: java-user-help@lucene.apache.org
>
>

