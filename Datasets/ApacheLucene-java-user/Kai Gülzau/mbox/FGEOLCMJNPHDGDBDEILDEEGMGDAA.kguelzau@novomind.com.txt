FROM: Kai Gülzau <kguel...@novomind.com>
SUBJECT: search model
DATE: 4 May 2005

Hi,

In chapter 10  of "Lucene in action" there are several case studies where
domain specific optimization is done in custom code (e.g. boosting
"new articles" or indexing certain field with a special analyzer).
I think we all have done something similar in our lucene application.

What i would love to see is a mini framework which frees us from all this
little standard things to be done (assigning an analyzer to a field for
indexing and query / boosting docs & fields at indexing time / defining
default search fields / ...).
The case study for "the server side" shows an approach where some of these
things can be done via an external config file. Unfortunately that config
is a little too specific ;)

Furthermore i think a user doesn't know about fields, boosts, phonetics or
fuzzy searches. And he shouldn't. A "search model" should do instead.

The search 'harry potter' should be translated for instance to
'title:"harry potter"^2 content:"harry potter" title:harry^2
title:potter^2' with the help of a search model.

Does anybody know of contrib classes (or a project) that do something
similar?


Thanks in advance!

Kai Gülzau


original question @
http://www.manning-sandbox.com/thread.jspa?threadID=11835


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


