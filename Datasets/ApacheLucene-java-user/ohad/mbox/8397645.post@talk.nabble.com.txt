FROM: ohad <o...@eng.tau.ac.il>
SUBJECT: Re: html parsers and numers of terms
DATE: 16 Jan 2007


Hi All
Just wanted to fill you in on an open source project i have recently
published. It is called Java Mozilla Html Parser ( on sourceforge ,
http://sourceforge.net/projects/mozillaparser ).
I had to create a java html parser that works just like browser do , so the
natural selection was using mozilla's parser. I tried to use JavaXPCOM at
first , but i could not access any of the classes i required (nsParser and
nsContentSink ) - somehow they were not included in the javaIDL... so... I
had to build a jni wrapper around mozilla's parser.

The outcome is a very nice parser that does the job and is stable so far of
what i have seen ( no crashes , no memory leaks). it is even compareable in
performacnce with tagsoup and neko , which are the ones that i have checked.

There are , however , some serious drawbacks that i would appreciate if
anyone will care to show me how to solve them. first and most annoying is
the fact that all parsing is done on a single thread - as you know , when
starting initXPCOM() one creates an event queue that can only be accessed
threw the thread that owns it. I could not proxy the parser objects i had no
matter what i did.

I would appreceate it if someone would try it out and tell me what the
parser feels like , as well as download the code from sourceforge and try to
compile it and see why the proxy things doesn't work.

Thanks everyone in advance
Ohad Serfaty
-- 
View this message in context: http://www.nabble.com/html-parsers-and-numers-of-terms-tf733866.html#a8397645
Sent from the Lucene - Java Users mailing list archive at Nabble.com.


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


