FROM: Doron Cohen <DOR...@il.ibm.com>
SUBJECT: Re: java.io.WriteAbortedException: writing aborted; java.io.NotSerializableException: org.apache.lucene.queryParser.Token
DATE: 25 Oct 2006

Hi Eugene,

If the query parser (from some reason) throws a ParseException, and the RMI
layer attempts to marshal/serialize that exception, there would probably be
an issue because although ParseException is serializable (as all
throwables) it has a Token data member, which is not serializable. Can you
check if this is the case?

- Doron

Eugeny N Dzhurinsky <bofh@redwerk.com> wrote on 25/10/2006 01:47:19:

> Hi there!
>
> I'm trying to implement a service, which is doing search on Lucene index.
This
> service contains a method returning List of Integer values, and takes
custom
> object as a parameter. All objects passing to this service are
serializable,
> but for some reason when executing this code
>
> Query includeQuery = queryParser.parse(findQuery.getIncludeQuery());
>
> ("findQuery" is object, which passed to the find method)
>
> this exception is thrown
>
> java.rmi.UnmarshalException: Error unmarshaling return; nested exception
is:
>  java.io.WriteAbortedException: writing aborted; java.io.
> NotSerializableException: org.apache.lucene.queryParser.Token
>  sun.rmi.transport.StreamRemoteCall.executeCall(Unknown Source)
>  sun.rmi.server.UnicastRef.invoke(Unknown Source)
>  LuceneService.LuceneService_Stub.find(Unknown Source)
>
> Am I miss something?
>
> --
> Eugene N Dzhurinsky


---------------------------------------------------------------------
To unsubscribe, e-mail: java-user-unsubscribe@lucene.apache.org
For additional commands, e-mail: java-user-help@lucene.apache.org


